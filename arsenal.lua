-- This file was generated using Luraph Obfuscator v13.5.8

return(function(IL,CL,jL,bL,zL,tL,sL,rL,BL,iL,SL,NL,KL,aL,GL,LL,mL,AL,hL,YL,UL,QL,gL,nL,kL,TL,uL,ML,JL,pL,RL,EL,X,...)local p,o=rawset,NL.sub;local x=(sL);local q,yL,s,U,i,h=tonumber,0X2,nil,nil,nil,nil;local P,c=select,(pcall);repeat if not(yL<=1)then do if yL==0X2 then s=NL.char;yL=0X0;continue;else i={[0]=CL};do yL=1;end;end;end;elseif yL==0X0 then U=UL;yL=0x3;do continue;end;else do h=hL.insert;end;break;end;until(false);yL=0x002;local I,a,cL,y=nil,nil,nil,(nil);repeat if not(yL<=1)then do if yL~=0X2 then y=bit32.band;yL=4;continue;else I=rL;do yL=0X1;end;end;end;elseif yL==0 then cL={};yL=3;continue;else a=IL;yL=0;end;until yL==0x4;local R,K=pL,RL.yield;yL=0X1;local S,b=nil,(nil);do while yL<=1 do if yL~=0X00 then S=bL;yL=0;else b=KL;do yL=2;end;continue;end;end;end;local k=(getfenv);local F=TL;local T=unpack;local Z=(SL);local e=assert;local E=(setfenv);local Y=(a-1);yL=0;local Q,d=nil,nil;do repeat if yL==0X0 then Q=k();yL=1;else d=EL;break;end;until false;end;do yL=0;end;local N,M,g,z,A,m,G=nil,nil,nil,nil,nil,nil,(nil);do while yL<9 do if not(yL<=0X3)then if not(yL<=5)then do if yL<=0X6 then m=2147483648;do yL=0X007;end;continue;else if yL~=0x7 then do M=QL;end;do yL=1;end;continue;else G=2^ML;do yL=0X0009;end;continue;end;end;end;else if yL==0X4 then M=U(o(M,0x0005),"..",function(MJ)do if F(MJ,2)==72 then local Jz=0;repeat if Jz~=0 then return"";else z=q(o(MJ,0x00001,CL));Jz=0X1;end;until(false);else local aF,BF=0,(nil);while(true)do if aF==0x0000 then BF=s(q(MJ,0X10));aF=1;else if z then local vX=(nil);for uh=0X00000,0X00002 do do if uh<=0X0000 then vX=N(BF,z);else do if uh==0X1 then z=gL;else return vX;end;end;end;end;end;else return BF;end;do break;end;end;end;end;end;end);yL=0X03;continue;else do N=kL;end;yL=0X8;end;end;elseif yL<=1 then do if yL~=0 then g=0X01;yL=2;else yL=0x00005;end;end;else do if yL~=0x00002 then A=function()local eD=(nil);local MD=(2);while(true)do do if not(MD<=0)then if MD==1 then g=g+0X0001;do MD=0X00;end;else do eD=F(M,g,g);end;do MD=1;end;end;else return eD;end;end;end;end;yL=0x6;else yL=0X00004;end;end;end;end;end;local v=(bit32.bnot);local J=(m-1);yL=0X0;local j=(nil);while yL<=0X0001 do if yL==0X0 then j=function()local GH,uH,VH=1,nil,(nil);while 1890825213 do if not(GH<=0x0)then if GH==1 then uH,VH=S(zL,M,g);GH=0X2;else g=VH;GH=0;end;else do return uH;end;end;end;end;yL=0x1;else do local gz,cz=0,nil;while"\110B\e\Z\X\087"do if gz==0 then cz=2;do gz=0X01;end;continue;else do for FM=1,31 do local qM=(0X000);while qM<2 do do if qM~=0X000 then do cz=cz*0x0002;end;qM=2;continue;else i[FM]=cz;do qM=1;end;continue;end;end;end;end;end;break;end;end;end;yL=0x002;continue;end;end;local L=function()local zp,cp=nil,nil;for oe=0,0x001 do do if oe==0X00000 then zp,cp=S(AL,M,g);else g=cp;continue;end;end;end;return zp;end;local V,H,xL,B,u,l=bit32.lshift,nil,nil,nil,nil,(nil);local t,D=jL,nL;do for X6=0,4 do if not(X6<=0X1)then if X6<=2 then B=function()local Kx,px=S("<d",M,g);g=px;return Kx;end;else if X6==0X0003 then do u=function(L6,K6,o6)local k6=((L6/i[K6])%i[o6]);do k6=k6-k6%1;end;return k6;end;end;continue;else l=function()local Gq=0;local gq=0X0;while true do local cC=(F(M,g,g));do g=g+1;end;Gq=D(Gq,V(y(cC,0X7f),gq));do if y(cC,0X80)==0 then return Gq;end;end;gq=gq+7;end;end;end;end;else if X6~=0X00 then do xL={};end;continue;else H={0X00002,3,1};continue;end;end;end;end;local f,C=mL,(string.match);local w=A();local XL=(A());local eL=(function(nK)local bK,SK,FK,zK,eK,CK=0X004,nil,nil,nil,nil,(nil);do repeat if bK<=3 then if not(bK<=0X1)then if bK==0X0002 then zK=t(SK[2],XL);do bK=1;end;continue;else XL=(13*XL+nK)%256;bK=0X6;end;else do if bK==0X0 then do return CK*16777216+eK*0x10000+zK*0X000100+FK;end;else do eK=t(SK[3],XL);end;bK=5;continue;end;end;end;else do if not(bK<=0x5)then do if bK~=0x6 then do FK=t(SK[1],XL);end;bK=0x2;else g=g+4;do bK=0X00000;end;end;end;elseif bK==0X0004 then SK={F(M,g,g+3)};bK=7;continue;else CK=t(SK[4],XL);bK=3;continue;end;end;end;until false;end;end);local O=function()local l9=0x2;local Y9=(nil);repeat do if l9<=0 then do return Y9;end;else if l9~=0X1 then Y9=l();l9=1;continue;else if Y9>J then do return Y9-a;end;end;do l9=0;end;continue;end;end;end;until false;end;local qL=function(...)do return P("#",...),{...};end;end;local PL=(function(QF)local XF,aF,UF=0X1,nil,(nil);do repeat if XF<=0X1 then do if XF~=0 then aF=j();XF=3;continue;else g=g+aF;do XF=4;end;end;end;else if XF==2 then for J8=1,aF,0X1F3D do local e8=J8+aL-0X1;if e8>aF then do e8=aF;end;end;local K8=nil;for WH=0,0X1 do if WH~=0x00000 then for Hj=1,#K8 do local qj=1;while qj<=0X1 do do if qj==0X0 then w=(QF*w+GL)%0x0000100;qj=2;continue;else(K8)[Hj]=t(K8[Hj],w);do qj=0;end;end;end;end;end;else K8={F(M,g+J8-1,g+e8-CL)};end;end;UF=UF..s(T(K8));end;XF=0;continue;else do UF="";end;do XF=2;end;end;end;until XF>=0X004;end;do return UF;end;end);local fL=1;local W,r={[6]=-6618832,[9]=0x0,[8]=1,[0X2]=7,[0x001]=0X5,[3]=0X0004,[6]=true,[6]=4,[5]=0.3985176845048144,[0X6]=4,[6]=0x4,[0X5]=7},(setmetatable);local function dL(Vl,jl,Sl)local al=(Sl[1]);local kl,Wl=Sl[0X007],Sl[0x2];local hl,Tl,el=Sl[3],Sl[9],(Sl[6]);local pl=(Sl[0X4]);local ol=(r({},{__mode="v"}));local Ql=Sl[0X5];local rl=(nil);if Ql<10 then do if not(Ql>=0X5)then do if not(Ql>=2)then if Ql==0X1 then rl=function(...)local HL,OL,VL=1,{},0;local lL=({[1]=Sl,[2]=OL});local wL=(k());local WL,ZL=qL(...);WL=WL-0x01;for sc=0,WL do do if Wl>sc then do(OL)[sc]=ZL[sc+0X1];end;else break;end;end;end;local DL=(wL==Q and jl or wL);if not el then ZL=nil;elseif not(al)then else OL[Wl]={n=WL>=Wl and WL-Wl+0X1 or 0x00000,T(ZL,Wl+1,WL+1)};end;if DL==wL then else E(rl,DL);end;local vL,VB,HB,cB=c(function()while true do local WU=(pl[HL]);local hU=(WU[6]);HL=HL+0x0001;if not(hU<9)then if not(hU>=0X000d)then do if not(hU<11)then if hU~=12 then local XX=(Vl[0X00]);OL[WU[0x0001]]=XX[0X01][XX[0X2]];HL=HL+0X01;do HL=HL+0X1;end;WU=pl[HL];HL=HL+0X1;OL[1]=OL[0X1][WU[0X7]];do WU=pl[HL];end;do HL=HL+0X1;end;do if OL[1]~=WU[0X7]then HL=WU[1];end;end;else local ep=kl[WU[0x3]];local Hp,Cp=ep[0X0008],nil;local dp=(#Hp);do if dp>0X0 then Cp={};for Sy=0x1,dp do local Ly=Hp[Sy];do if Ly[1]==0X000 then(Cp)[Sy-0x1]={OL,Ly[2]};else Cp[Sy-0X001]=Vl[Ly[2]];end;end;end;(h)(ol,Cp);end;end;OL[WU[0x1]]=dL(Cp,DL,ep);end;else if hU==10 then repeat local ac,Dc,Xc=ol,OL,WU[1];if not(#ac>0x000)then else local qb=({});for eN,YN in R,ac do for rt,wt in R,YN do if wt[1]==Dc and wt[0x00002]>=Xc then local Uu=wt[2];if not(not qb[Uu])then else(qb)[Uu]={Dc[Uu]};end;wt[1]=qb[Uu];do wt[2]=0x1;end;end;end;end;end;until true;else HL=WU[0x3];end;end;end;else if hU>=0xf then if not(hU<0X10)then if hU~=17 then do repeat local wF,nF=ol,OL;if not(#wF>0x00000)then else local Si={};for cJ,mJ in R,wF do for vC,NC in R,mJ do if not(NC[1]==nF and NC[0X0002]>=0X0)then else local c1=NC[2];if not(not Si[c1])then else(Si)[c1]={nF[c1]};end;(NC)[1]=Si[c1];(NC)[2]=0X1;end;end;end;end;until true;end;return;else do OL[WU[0x1]]=DL[WU[0x00004]];end;HL=HL+0X1;HL=HL+0X1;WU=pl[HL];do HL=HL+1;end;if not OL[0x1]then do HL=WU[0X3];end;end;end;else if not OL[WU[1]]then HL=WU[3];end;end;else do if hU~=14 then local hk=Vl[WU[0X00003]];(OL)[WU[0X1]]=hk[0x1][hk[0x2]];WU=pl[HL];HL=HL+1;do(OL)[0x00]=OL[WU[0X3]][WU[7]];end;WU=pl[HL];do HL=HL+1;end;if OL[WU[0X003]]==WU[0x07]then else HL=WU[0X00001];end;else do if OL[WU[0X3]]==OL[WU[0X2]]then do HL=WU[1];end;end;end;end;end;end;end;else if not(hU<4)then if hU>=6 then if not(hU>=0x007)then else if hU==0X8 then OL[WU[1]]=-OL[WU[0X3]];else OL[WU[1]]=DL[WU[4]];end;end;else if hU==5 then(OL)[WU[1]]=WU[4];else do OL[WU[1]]=OL[WU[0X3]]==OL[WU[0X2]];end;end;end;else if hU>=2 then if hU==0X3 then local Xc,Rc=WU[0X1],(WU[3]);if Rc==0 then else do VL=Xc+Rc-0x01;end;end;local dc,wc,vc=nil,nil,WU[2];if Rc==0x1 then dc,wc=qL(OL[Xc]());else dc,wc=qL(OL[Xc](T(OL,Xc+1,VL)));end;do if vc~=1 then do if vc==0X0000 then dc=dc+Xc-1;VL=dc;else dc=Xc+vc-0x00002;VL=dc+0x01;end;end;local XW=(0x000);for ti=Xc,dc do do XW=XW+1;end;OL[ti]=wc[XW];end;else VL=Xc-0X1;end;end;else local xr=WU[0X1];local Zr=b(function(...)K();for XM,jM,xM,gM,OM,KM,VM,YM,oM,fM in...do(K)(true,{XM,jM,xM,gM,OM,KM,VM,YM,oM,fM});end;end);(Zr)(OL[xr],OL[xr+1],OL[xr+2]);VL=xr;(OL)[xr]=Zr;HL=WU[0X3];end;else if hU~=1 then local vJ=Vl[1];OL[0]=vJ[0X1][vJ[0x2]];WU=pl[HL];local DJ=(OL[0X0]);do HL=HL+0x1;end;local zJ=(WU[1]);OL[zJ+1]=DJ;(OL)[zJ]=DJ[WU[0X00007]];WU=pl[HL];do HL=HL+1;end;do OL[2]=WU[0X00004];end;HL=HL+1;zJ=0X0;do OL[zJ]=OL[zJ](OL[zJ+1],OL[zJ+2]);end;VL=zJ;WU=pl[HL];do HL=HL+0x1;end;do vJ=Vl[0];end;(OL)[WU[1]]=vJ[0x1][vJ[2]];WU=pl[HL];HL=HL+0X0001;OL[WU[1]]=OL[WU[0X00003]][WU[0x7]];HL=HL+1;do HL=HL+0X1;end;WU=pl[HL];HL=HL+0X1;do(OL[0])[WU[0x04]]=OL[1];end;do WU=pl[HL];end;do HL=HL+0X0001;end;do HL=WU[3];end;else OL[WU[1]]={T({},0X001,WU[0X3])};end;end;end;end;end;end);if vL then if VB then if cB==0x00001 then do return OL[HB]();end;else do return OL[HB](T(OL,HB+1,VL));end;end;elseif HB then return T(OL,HB,cB);end;else if f(VB)=='\115\116\114\i\110\g'then if C(VB,"\097\116t\e\m\p\116\032\116o\ \yi\e\108\100\ \097\099\114\oss\032\m\101\116a\m\101\116ho\d\/\067\%\-\099\097\ll\ b\o\117ndar\121")then do return coroutine.yield();end;end;if not(C(VB,'\^\046-\:\%\100\+\:\032'))then d(VB,0X0);else(d)("L\117rap\h\ Sc\114i\p\116\:"..(Tl[HL-1]or"(internal)")..'\:\ '..x(VB),0);end;else(d)(VB,0);end;end;end;else rl=function(...)local Ap=({});local ap=(1);local Pp=k();local Ep=({[2]=Ap,[1]=Sl});local yp,lp=qL(...);local Yp=(Pp==Q and jl or Pp);yp=yp-1;for R0=0,yp do if Wl>R0 then(Ap)[R0]=lp[R0+0X00001];else break;end;end;if not el then do lp=nil;end;elseif al then do(Ap)[Wl]={n=yp>=Wl and yp-Wl+0x001 or 0X0,T(lp,Wl+1,yp+1)};end;end;local wp=(0);if Yp==Pp then else(E)(rl,Yp);end;local Mp,ip,sp,rp=c(function()while true do local Nd=pl[ap];local Ud=(Nd[6]);do ap=ap+1;end;if Ud>=9 then if not(Ud>=13)then if Ud<11 then if Ud==0X00a then if Ap[Nd[0X3]]~=Ap[Nd[0X00002]]then else do ap=Nd[1];end;end;else if not(not(Ap[Nd[0X3]]<=Ap[Nd[0X00002]]))then else ap=Nd[1];end;end;else do if Ud==12 then local ou=Vl[0];(Ap)[Nd[0X1]]=ou[0X001][ou[0X2]];do Nd=pl[ap];end;ap=ap+1;(Ap)[0]=Ap[0X0000][Nd[0X07]];ap=ap+0X1;ap=ap+0X0001;do Nd=pl[ap];end;ap=ap+1;do if Ap[Nd[3]]~=Nd[7]then ap=Nd[0X1];end;end;else(Ap)[Nd[1]]=not Ap[Nd[3]];end;end;end;else if not(Ud<0x0000F)then if not(Ud<0x010)then if Ud~=17 then do Ap[Nd[0X1]]=Nd[0X04];end;else local te=Nd[1];local Ee,pe=Ap[te]();if not(Ee)then else do ap=Nd[3];end;(Ap)[te+3]=pe;end;end;else Ap[Nd[0X1]]=Z(Ap[Nd[3]],Ap[Nd[0X2]]);end;else if Ud~=14 then Ap[Nd[1]]=Yp[Nd[4]];else local Rz=Vl[Nd[3]];(Ap)[0X001]=Rz[1][Rz[2]];ap=ap+1;do ap=ap+0X001;end;do Nd=pl[ap];end;ap=ap+0X001;do if Ap[Nd[3]]~=Nd[0x7]then else do ap=Nd[1];end;end;end;end;end;end;else if not(Ud<0x4)then do if not(Ud>=0X6)then if Ud==5 then for zH=Nd[1],Nd[0X3]do do Ap[zH]=nil;end;end;else repeat local Xp,Np=ol,(Ap);do if not(#Xp>0X0000)then else local YU=({});do for lw,aw in R,Xp do do for yF,xF in R,aw do if not(xF[1]==Np and xF[0X2]>=0X0)then else local as=xF[2];if not YU[as]then YU[as]={Np[as]};end;xF[0X0001]=YU[as];do xF[2]=1;end;end;end;end;end;end;end;end;until true;return;end;else if Ud<0X00007 then do(Ap)[Nd[0X1]]={T({},1,Nd[3])};end;else if Ud~=8 then local PK=(kl[Nd[3]]);local iK,gK=PK[0x8],nil;local pK=(#iK);if not(pK>0X0)then else gK={};for u7=0X0001,pK do local B7=iK[u7];do if B7[0X1]~=0X0 then(gK)[u7-0X1]=Vl[B7[2]];else(gK)[u7-0X1]={Ap,B7[0x2]};end;end;end;(h)(ol,gK);end;(Ap)[Nd[0x1]]=dL(gK,Yp,PK);else end;end;end;end;else if Ud<2 then if Ud~=0X0001 then ap=Nd[0X3];else local QV=(Nd[1]);local lV=(Ap[Nd[0X3]]);do(Ap)[QV+0X1]=lV;end;do Ap[QV]=lV[Nd[7]];end;end;else if Ud==3 then(Ap)[Nd[1]]=Ap[Nd[0X3]]^Ap[Nd[2]];else local s7=(Vl[Nd[0X3]]);(Ap)[0X0]=s7[1][s7[2]];do ap=ap+1;end;ap=ap+0X01;ap=ap+1;do s7=Vl[1];end;(Ap)[0X1]=s7[0X1][s7[2]];ap=ap+0X01;do ap=ap+0X1;end;Nd=pl[ap];ap=ap+0X1;(Ap)[1]=Ap[1][Nd[7]];ap=ap+1;do ap=ap+1;end;Nd=pl[ap];local i7=Nd[1];ap=ap+1;Ap[i7](Ap[i7+0X01]);wp=i7-1;Nd=pl[ap];ap=ap+0X1;ap=Nd[3];end;end;end;end;end;end);do if Mp then if ip then if rp~=0X1 then return Ap[sp](T(Ap,sp+0X00001,wp));else return Ap[sp]();end;elseif not(sp)then else return T(Ap,sp,rp);end;else if f(ip)~="string"then d(ip,0X0);else if not(C(ip,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(C(ip,"^.-:%d+: "))then(d)(ip,0X00);else d("Luraph Script:"..(Tl[ap-1]or"(internal)")..'\:\ '..x(ip),0X0);end;end;end;end;end;end;end;else if Ql<3 then rl=function(...)local is,xs=0X1,({});local Ts=(k());local fs,Ys={[1]=Sl,[2]=xs},((Ts==Q and jl or Ts));local Ms,ns=qL(...);Ms=Ms-0X1;for Yv=0X0,Ms do if Wl>Yv then(xs)[Yv]=ns[Yv+1];else break;end;end;local As=0X0;if not el then ns=nil;elseif not(al)then else(xs)[Wl]={n=Ms>=Wl and Ms-Wl+0x1 or 0X000,T(ns,Wl+1,Ms+0X1)};end;do if Ys~=Ts then E(rl,Ys);end;end;local ws,ks,ts,Es=c(function()while true do local eq=(pl[is]);local Wq=eq[6];is=is+1;if not(Wq>=48)then if not(Wq<0X00018)then do if Wq<36 then if not(Wq<30)then if Wq>=0X000021 then if not(Wq>=0x22)then if xs[eq[3]]==xs[eq[0X002]]then else is=eq[1];end;else if Wq~=0X23 then do(xs)[eq[0X1]]={T({},0X1,eq[0X3])};end;else xs[eq[0X00001]]=Ys[eq[4]];end;end;else if not(Wq<0X1f)then if Wq~=0x20 then(xs[eq[1]])[xs[eq[0X3]]]=xs[eq[2]];else repeat local Oj,ej=ol,(xs);if#Oj>0 then local bs={};for ee,Ke in R,Oj do for Bb,Jb in R,Ke do do if not(Jb[0x00001]==ej and Jb[2]>=0x0000)then else local CD=(Jb[2]);if not bs[CD]then(bs)[CD]={ej[CD]};end;Jb[1]=bs[CD];(Jb)[2]=1;end;end;end;end;end;until true;do return true,eq[1],0x0;end;end;else local Vf=(eq[0X1]);local Df,of=xs[Vf],((eq[2]-0X01)*0X032);do for Wf=1,As-Vf do Df[of+Wf]=xs[Vf+Wf];end;end;end;end;else do if Wq<0X1B then do if Wq<0x00019 then xs[eq[1]]=true;else if Wq~=0X1A then if eq[2]~=142 then do for zO=eq[1],eq[0X3]do xs[zO]=nil;end;end;else is=is-1;(pl)[is]={[3]=(eq[0X3]-0X000E6),[1]=(eq[0x1]-0xe6),[6]=9};end;else local H2=eq[1];As=H2+eq[0x003]-1;xs[H2](T(xs,H2+1,As));do As=H2-0x1;end;end;end;end;else if not(Wq<28)then if Wq~=29 then local h0=xs[eq[0X0003]]/xs[eq[0X02]];(xs)[eq[0X1]]=h0-h0%1;else local e0=(eq[0x01]);local b0=(b(function(...)K();for Wk in...do K(true,Wk);end;end));b0(xs[e0],xs[e0+1],xs[e0+2]);As=e0;xs[e0]=b0;is=eq[0x3];end;else if not(not(eq[0X4]<xs[eq[2]]))then else is=eq[0X00001];end;end;end;end;end;else if Wq<0X0002a then if not(Wq<0X0027)then do if not(Wq<0X000028)then if Wq~=41 then(xs)[eq[1]]=fs[eq[3]];else repeat local M2,W2=ol,xs;if#M2>0 then local kc={};do for EE,cE in R,M2 do for cY,YY in R,cE do if YY[1]==W2 and YY[2]>=0X000 then local ra=(YY[0X0002]);if not(not kc[ra])then else kc[ra]={W2[ra]};end;YY[0X1]=kc[ra];(YY)[2]=0X1;end;end;end;end;end;until true;return false,eq[1],As;end;else local cU=(Vl[eq[3]]);do(xs)[eq[0X1]]=cU[1][cU[2]];end;end;end;else if not(Wq>=0X25)then if eq[2]==225 then is=is-0X1;pl[is]={[0x1]=(eq[1]-0X04b),[0X3]=(eq[0X3]-0X0004B),[0X6]=17};elseif eq[0X00002]~=0X00067 then repeat local VS,qS=ol,(xs);if#VS>0X000 then local tS=({});do for E5,z5 in R,VS do do for Ik,Zk in R,z5 do if Zk[0x01]==qS and Zk[2]>=0x0 then local Gd=Zk[0X02];if not tS[Gd]then tS[Gd]={qS[Gd]};end;Zk[0X1]=tS[Gd];(Zk)[0X2]=0x01;end;end;end;end;end;end;until true;local O0=eq[0X001];return false,O0,O0;else is=is-1;do pl[is]={[0x001]=(eq[0X1]-0x16),[0X00006]=0X000013,[0X03]=(eq[3]-22)};end;end;else if Wq~=38 then do repeat local g9,n9=ol,xs;do if#g9>0 then local R6={};for s4,g4 in R,g9 do for mR,RR in R,g4 do if not(RR[1]==n9 and RR[2]>=0X0)then else local u8=RR[2];if not R6[u8]then R6[u8]={n9[u8]};end;do(RR)[1]=R6[u8];end;RR[2]=1;end;end;end;end;end;until true;end;local lW=eq[0x01];return false,lW,lW+eq[0X3]-0X002;else local OM=eq[1];local gM=(b(function(...)K();do for l1,Q1,h1,X1,j1,z1,q1,M1,x1,N1 in...do K(true,{l1,Q1,h1,X1,j1,z1,q1,M1,x1,N1});end;end;end));gM(xs[OM],xs[OM+1],xs[OM+2]);As=OM;(xs)[OM]=gM;is=eq[3];end;end;end;else if not(Wq<0X0002D)then if Wq<46 then local GK=(eq[1]);do(xs)[GK]=xs[GK](T(xs,GK+1,As));end;do As=GK;end;else if Wq~=0X00002F then xs[eq[1]]=xs[eq[0x00003]]%xs[eq[2]];else do(fs)[eq[3]]=xs[eq[1]];end;end;end;else if not(Wq<43)then if Wq~=0X2c then local A4=Vl[eq[0x3]];A4[0X1][A4[2]]=xs[eq[1]];else do repeat local vA,TA=ol,(xs);if not(#vA>0)then else local KR=({});for nw,Yw in R,vA do for M0,e0 in R,Yw do if not(e0[1]==TA and e0[2]>=0X0)then else local gE=e0[0X2];if not KR[gE]then do KR[gE]={TA[gE]};end;end;e0[1]=KR[gE];e0[0X2]=0x01;end;end;end;end;until true;end;do return;end;end;else do(xs)[eq[1]]=eq[0X4];end;end;end;end;end;end;else if Wq<0x0C then if not(Wq>=0X00006)then if Wq<3 then if Wq>=1 then if Wq~=2 then do xs[eq[1]]=y(xs[eq[0X00003]],xs[eq[2]]);end;else do As=eq[1];end;xs[As]();As=As-0X1;end;else do(xs)[eq[0X1]]=xs[eq[0x3]]<=xs[eq[2]];end;end;else if not(Wq>=4)then do if not(not(xs[eq[3]]<=xs[eq[2]]))then else is=eq[1];end;end;else do if Wq==0X0005 then local c0=(eq[0X0001]);(xs[c0])(xs[c0+0X1]);As=c0-1;else xs[eq[1]]=xs[eq[3]]%eq[0X07];end;end;end;end;else if Wq<9 then if not(Wq<7)then if Wq~=8 then local WG=(kl[eq[0x00003]]);local MG=(WG[0X8]);local RG=#MG;local YG=(nil);if RG>0 then YG={};for pA=1,RG do local QA=(MG[pA]);if QA[0X1]==0 then(YG)[pA-0X0001]={xs,QA[2]};else do(YG)[pA-0X1]=Vl[QA[0X00002]];end;end;end;(h)(ol,YG);end;(xs)[eq[1]]=dL(YG,Ys,WG);else(xs)[eq[0X1]]=xs[eq[3]]>xs[eq[0X2]];end;else(xs[eq[0X00001]])[eq[0X04]]=eq[0X07];end;else if not(Wq>=0X00a)then local Bm,Am=eq[1],(Ms-Wl);if Am<0 then do Am=-0x1;end;end;for qp=Bm,Bm+Am do xs[qp]=ns[Wl+(qp-Bm)+1];end;do As=Bm+Am;end;else if Wq~=0Xb then(xs)[eq[1]]=xs[eq[3]]~=eq[7];else do xs[eq[1]][eq[4]]=xs[eq[2]];end;end;end;end;end;else if not(Wq>=18)then if Wq<0x0000F then if not(Wq<0xD)then if Wq~=0XE then repeat local pT,DT=ol,(xs);if not(#pT>0)then else local DA=({});for zo,Wo in R,pT do for j9,k9 in R,Wo do if not(k9[0X1]==DT and k9[2]>=0X0)then else local XU=(k9[2]);do if not DA[XU]then(DA)[XU]={DT[XU]};end;end;(k9)[0x00001]=DA[XU];(k9)[2]=0X001;end;end;end;end;until true;return true,eq[1],1;else xs[eq[1]]=xs[eq[0X3]]~=xs[eq[0x002]];end;else local xh=(eq[1]);local Vh=b(function(...)(K)();for T3,i3 in...do K(true,T3,i3);end;end);Vh(xs[xh],xs[xh+0X00001],xs[xh+0X2]);As=xh;(xs)[xh]=Vh;is=eq[3];end;else if not(Wq>=16)then local jn=(eq[0x1]);do(xs)[jn]=xs[jn](xs[jn+0X00001],xs[jn+2]);end;As=jn;else if Wq~=0X11 then repeat local Xe,ie,He=ol,xs,eq[1];do if#Xe>0X0 then local ET={};for LD,yD in R,Xe do for Ds,Xs in R,yD do do if Xs[0X1]==ie and Xs[2]>=He then local bh=Xs[2];do if not ET[bh]then do ET[bh]={ie[bh]};end;end;end;(Xs)[0X00001]=ET[bh];(Xs)[2]=1;end;end;end;end;end;end;until true;else(xs)[eq[0X1]]=xs[eq[3]];end;end;end;else if Wq>=0X15 then if Wq>=22 then do if Wq==0x17 then do if eq[2]==70 then is=is-0X1;(pl)[is]={[0x01]=(eq[0x1]-0Xe7),[0X3]=(eq[3]-231),[0X006]=17};else local HN=(eq[1]);for l9=HN,HN+(eq[0X3]-0X1)do xs[l9]=ns[Wl+(l9-HN)+0x01];end;end;end;else do if xs[eq[3]]~=eq[0x7]then else do is=eq[1];end;end;end;end;end;else if not(xs[eq[0X3]]<xs[eq[2]])then is=eq[1];end;end;else if not(Wq<0X13)then if Wq==20 then xs[eq[1]]=xs[eq[0X00003]]==xs[eq[0x02]];else if eq[0X02]==0X13 then is=is-0X00001;pl[is]={[0X6]=59,[1]=(eq[1]-0X83),[3]=(eq[3]-131)};elseif eq[0X2]==137 then is=is-1;pl[is]={[0X00001]=(eq[1]-50),[3]=(eq[3]-50),[6]=0x9};else do xs[eq[1]]=-xs[eq[3]];end;end;end;else local ch=eq[0X1];local Mh,Jh,kh=xs[ch]();do if not(Mh)then else(xs)[ch+0X1]=Jh;(xs)[ch+2]=kh;is=eq[3];end;end;end;end;end;end;end;else if Wq<72 then if Wq>=60 then do if not(Wq>=66)then if not(Wq<0X3f)then do if not(Wq<0X40)then if Wq~=65 then local V0=(eq[0X0001]);local c0=xs[V0];local M0,A0=xs[V0+1],xs[V0+0X0002];(xs)[V0]=b(function()for JY=c0,M0,A0 do K(true,JY);end;end);is=eq[3];else xs[eq[1]]=t(xs[eq[3]],xs[eq[0X2]]);end;else(xs)[eq[1]]=xs[eq[0X03]]^xs[eq[0X2]];end;end;else if not(Wq<61)then if Wq==0X3E then xs[eq[1]]={};else if xs[eq[3]]==xs[eq[0X2]]then is=eq[1];end;end;else(xs)[eq[0X001]]=V(xs[eq[0X3]],xs[eq[0X2]]);end;end;else do if Wq<69 then if Wq<0X43 then xs[eq[1]]=xs[eq[3]]<xs[eq[0X2]];else do if Wq~=0x000044 then As=eq[0X1];(xs)[As]=xs[As]();else if xs[eq[3]]~=eq[7]then is=eq[0X1];end;end;end;end;else if Wq>=70 then if Wq==0X47 then do if xs[eq[0X1]]then is=eq[3];end;end;else(xs)[eq[1]]=xs[eq[3]]>=xs[eq[0X00002]];end;else do xs[eq[1]]=xs[eq[0X3]]+xs[eq[0X2]];end;end;end;end;end;end;else if not(Wq<54)then if Wq<57 then if Wq<0X00037 then(xs)[eq[1]]=false;else if Wq==0X38 then local Jg=(eq[3]);xs[eq[0X1]]=xs[Jg]..xs[Jg+0X1];else local Nr,Jr=eq[0X00001],(eq[0x0003]);do As=Nr+Jr-0X1;end;do repeat local xi,Li=ol,xs;do if not(#xi>0)then else local Ub={};do for OT,NT in R,xi do for kY,IY in R,NT do do if IY[0X0001]==Li and IY[2]>=0X000 then local tv=(IY[2]);if not(not Ub[tv])then else Ub[tv]={Li[tv]};end;IY[1]=Ub[tv];(IY)[0X2]=0X1;end;end;end;end;end;end;end;until true;end;return true,Nr,Jr;end;end;else do if Wq<58 then(xs)[eq[1]]=nil;else do if Wq==59 then xs[eq[1]]=not xs[eq[3]];else local iH=eq[0X01];local eH=(eq[2]-1)*50;local hH=(xs[iH]);for FF=1,eq[3]do hH[eH+FF]=xs[iH+FF];end;end;end;end;end;end;else do if not(Wq<0x033)then if not(Wq>=52)then if eq[0X2]~=237 then if not(not xs[eq[0X1]])then else is=eq[0X3];end;else is=is-1;(pl)[is]={[1]=(eq[1]-0X2A),[0X6]=0X39,[3]=(eq[3]-42)};end;else if Wq==53 then local Xh=(eq[1]);(xs[Xh])(T(xs,Xh+0X00001,As));As=Xh-0X0001;else(xs)[eq[1]]=v(xs[eq[0X00003]]);end;end;else if Wq>=49 then if Wq~=0X32 then if eq[2]~=0x4A then do xs[eq[0X01]]=#xs[eq[3]];end;else is=is-1;do(pl)[is]={[0X00006]=44,[1]=(eq[0X1]-0x00D1),[3]=(eq[3]-209)};end;end;else local YS=eq[0X1];(xs[YS])(xs[YS+0X1],xs[YS+0X00002]);As=YS-0X00001;end;else(xs)[eq[1]]=xs[eq[0X0003]]-xs[eq[0x2]];end;end;end;end;end;else do if Wq<84 then do if not(Wq>=0x00004e)then if not(Wq>=0x00004b)then if not(Wq<73)then if Wq==74 then(xs)[eq[1]]=D(xs[eq[3]],xs[eq[2]]);else local A5=eq[0x0001];local R5,u5=xs[A5]();do if not(R5)then else do(xs)[A5+1]=u5;end;is=eq[0X3];end;end;end;else local vb=eq[1];local Gb,Cb=xs[vb]();if not(Gb)then else is=eq[3];(xs)[vb+3]=Cb;end;end;else do if Wq>=76 then if Wq==0X4D then local G8=(eq[0x03]);local q8=(eq[0X00001]);if G8~=0X000 then As=q8+G8-1;end;local l8,H8=nil,(nil);local V8=(eq[0X0002]);if G8==1 then l8,H8=qL(xs[q8]());else l8,H8=qL(xs[q8](T(xs,q8+0X1,As)));end;if V8==1 then As=q8-0X1;else if V8~=0 then l8=q8+V8-2;As=l8+0X01;else l8=l8+q8-0X1;As=l8;end;local Ym=0X0;for rI=q8,l8 do Ym=Ym+0X1;xs[rI]=H8[Ym];end;end;else do xs[eq[1]]=Z(xs[eq[0x3]],xs[eq[2]]);end;end;else(xL)[eq[3]]=xs[eq[1]];end;end;end;else if Wq>=81 then if not(Wq<82)then if Wq~=83 then local vJ=(eq[0X0003]);local qJ=(xs[vJ]);for cD=vJ+1,eq[2]do qJ=qJ..xs[cD];end;xs[eq[1]]=qJ;else(xs)[eq[1]]=xs[eq[0X3]]/xs[eq[0X2]];end;else xs[eq[1]]=xL[eq[3]];end;else do if not(Wq>=79)then local h5=eq[1];local z5,D5=xs[h5]();do if not(z5)then else for JG=0X1,eq[0X2]do xs[h5+JG]=D5[JG];end;is=eq[0X00003];end;end;else if Wq==80 then do xs[eq[0X1]]=eq[4];end;else(xs)[eq[1]]=xs[eq[0X3]][xs[eq[2]]];end;end;end;end;end;end;else if Wq>=90 then do if Wq<93 then if Wq>=91 then do if Wq==0X5c then if not(not(xs[eq[3]]<=eq[0X0007]))then else is=eq[0X0001];end;else do if xs[eq[0X3]]<xs[eq[0x2]]then is=eq[0X00001];end;end;end;end;else local iM=eq[0X1];xs[iM]=xs[iM](xs[iM+1]);As=iM;end;else if Wq>=0X5e then if Wq~=0x05F then local Dy=(eq[1]);As=Dy+eq[3]-0X1;(xs)[Dy]=xs[Dy](T(xs,Dy+0X1,As));As=Dy;else xs[eq[1]]=xs[eq[0X003]]*xs[eq[2]];end;else(xs[eq[1]])[xs[eq[0x0003]]]=eq[0X7];end;end;end;else if not(Wq>=0x0057)then if not(Wq<85)then if Wq~=0x56 then Ys[eq[4]]=xs[eq[1]];else is=eq[0X3];end;else xs[eq[1]]=xs[eq[3]]*eq[0x00007];end;else if not(Wq<0X000058)then if Wq==89 then if xs[eq[3]]<=xs[eq[0X2]]then is=eq[1];end;else local ca,ma=eq[0x001],(xs[eq[3]]);(xs)[ca+1]=ma;(xs)[ca]=ma[eq[7]];end;else xs[eq[1]]=xs[eq[3]][eq[0X7]];end;end;end;end;end;end;end;end;end);do if ws then if ks then do if Es==0x1 then return xs[ts]();else return xs[ts](T(xs,ts+0X1,As));end;end;elseif ts then return T(xs,ts,Es);end;else do if f(ks)=="string"then if not(C(ks,'\097\116\116\em\pt\ \116\o\032\yi\e\l\100\ a\c\114\o\ss\ \109\101\116am\et\104\o\100\047C\%\045\099all\ b\o\117n\dar\y'))then else return coroutine.yield();end;if C(ks,"^.-:%d+: ")then(d)("Luraph Script:"..(Tl[is-1]or'(i\110t\101\114na\108\041').."\:\032"..x(ks),0X00000);else(d)(ks,0X0);end;else d(ks,0);end;end;end;end;end;else if Ql==0X004 then rl=function(...)local Hs,Xs=0X01,{};local rs=(k());local gs={[2]=Xs,[1]=Sl};local Us,us=qL(...);do Us=Us-1;end;for AE=0,Us do if Wl>AE then(Xs)[AE]=us[AE+1];else break;end;end;if not el then us=nil;elseif al then Xs[Wl]={n=Us>=Wl and Us-Wl+1 or 0X0000,T(us,Wl+0X001,Us+1)};end;local es=(rs==Q and jl or rs);local qs=(0);if es~=rs then E(rl,es);end;local js,Ts,Os,Ks=c(function()while true do local r7=(pl[Hs]);local B7=r7[0X00006];Hs=Hs+1;if not(B7<8)then if not(B7<0Xc)then do if not(B7>=14)then if B7~=13 then do Xs[r7[0x1]]=r7[0X4];end;else(Xs)[r7[0x1]]=Xs[r7[3]]%Xs[r7[2]];end;else if B7==0Xf then local Jf,af=kl[r7[0X0003]],(nil);local pf=(Jf[8]);local jf=#pf;if not(jf>0x0)then else af={};do for Ri=0X1,jf do local Di=(pf[Ri]);if Di[1]~=0 then do af[Ri-0x1]=Vl[Di[0X0002]];end;else af[Ri-1]={Xs,Di[0X00002]};end;end;end;h(ol,af);end;(Xs)[r7[0x1]]=dL(af,es,Jf);else(Xs)[r7[1]]={T({},0X1,r7[3])};end;end;end;else do if B7>=0Xa then if B7==0x000B then local A2=(Vl[r7[3]]);do(Xs)[r7[1]]=A2[0X1][A2[2]];end;r7=pl[Hs];Hs=Hs+1;(Xs)[r7[0X1]]=Xs[3][r7[0X07]];r7=pl[Hs];Hs=Hs+1;(Xs)[3]=Xs[r7[0X3]][r7[0X007]];do Hs=Hs+0X1;end;Hs=Hs+1;do r7=pl[Hs];end;Hs=Hs+0X1;Xs[0x4]=Xs[0X00002][r7[7]];Hs=Hs+0x1;Hs=Hs+0x1;do r7=pl[Hs];end;Hs=Hs+1;do(Xs[3])[r7[4]]=Xs[r7[2]];end;r7=pl[Hs];Hs=Hs+1;(Xs)[3]=es[r7[4]];Hs=Hs+0X1;Hs=Hs+1;r7=pl[Hs];Hs=Hs+0x1;Xs[r7[1]]=r7[0x4];r7=pl[Hs];do Hs=Hs+0X001;end;local e2=r7[1];(Xs[e2])(Xs[e2+0X001]);do qs=e2-0X1;end;do r7=pl[Hs];end;Hs=Hs+0X1;Hs=r7[3];else local kr=r7[1];local Tr,sr,Br=Xs[kr]();if Tr then do(Xs)[kr+0X1]=sr;end;do(Xs)[kr+2]=Br;end;Hs=r7[3];end;end;else do if B7~=0X9 then Xs[0]=false;r7=pl[Hs];local q1=Vl[r7[0X3]];Hs=Hs+1;do q1[1][q1[0X00002]]=Xs[0X000];end;Hs=Hs+1;repeat local Uc,xc=ol,(Xs);if#Uc>0 then local sJ=({});for pp,Dp in R,Uc do for jO,mO in R,Dp do do if mO[0X1]==xc and mO[2]>=0X00000 then local Pd=(mO[2]);if not sJ[Pd]then sJ[Pd]={xc[Pd]};end;(mO)[1]=sJ[Pd];mO[2]=1;end;end;end;end;end;until true;do return;end;else for B5=r7[0X1],r7[0X3]do Xs[B5]=nil;end;end;end;end;end;end;else if not(B7<4)then do if B7<0X006 then if B7==0X00005 then do Xs[r7[0x1]]=-Xs[r7[0x0003]];end;else(Xs)[r7[0X1]]=Xs[r7[3]]~=Xs[r7[2]];end;else if B7==7 then local eR=r7[1];local AR=((r7[2]-0x1)*0X32);local lR=Xs[eR];for vL=1,r7[3]do do lR[AR+vL]=Xs[eR+vL];end;end;else Hs=r7[0X3];end;end;end;else if not(B7<2)then do if B7==3 then(Xs)[r7[1]]=es[r7[4]];r7=pl[Hs];Hs=Hs+1;do qs=r7[0X00001];end;Xs[qs]();qs=qs-1;Hs=Hs+0x0001;Hs=Hs+0X001;do r7=pl[Hs];end;do Hs=Hs+0x01;end;Xs[r7[1]]=es[r7[0X4]];do r7=pl[Hs];end;local tt=Vl[r7[0X3]];Hs=Hs+1;do(Xs)[r7[1]]=tt[0X1][tt[2]];end;r7=pl[Hs];do Hs=Hs+1;end;local Ft=r7[1];local Et=Xs[1];Xs[Ft+0x1]=Et;(Xs)[Ft]=Et[r7[7]];r7=pl[Hs];local Zt=(r7[3]);Hs=Hs+0X00001;Ft=1;local Dt=r7[2];if Zt==0X00 then else qs=Ft+Zt-1;end;local St,Vt=nil,nil;do if Zt~=1 then St,Vt=qL(Xs[Ft](T(Xs,Ft+0X1,qs)));else St,Vt=qL(Xs[Ft]());end;end;do if Dt==1 then do qs=Ft-1;end;else if Dt~=0X0 then do St=Ft+Dt-0X002;end;qs=St+0X00001;else St=St+Ft-1;qs=St;end;local cO=(0X0000);do for cw=Ft,St do do cO=cO+0X0001;end;do(Xs)[cw]=Vt[cO];end;end;end;end;end;Hs=Hs+0X1;Ft=0x0;Zt=0x0;Dt=4;if Zt~=0X00000 then qs=Ft+Zt-0X1;end;St,Vt=nil;if Zt==0X1 then St,Vt=qL(Xs[Ft]());else do St,Vt=qL(Xs[Ft](T(Xs,Ft+1,qs)));end;end;do if Dt==1 then qs=Ft-1;else do if Dt~=0X0 then St=Ft+Dt-2;do qs=St+0X1;end;else do St=St+Ft-0x1;end;qs=St;end;end;local qJ=0;do for HB=Ft,St do do qJ=qJ+1;end;Xs[HB]=Vt[qJ];end;end;end;end;r7=pl[Hs];Hs=Hs+1;Ft=0;local vt=(b(function(...)(K)();do for Vk,Yk in...do(K)(true,Vk,Yk);end;end;end));(vt)(Xs[Ft],Xs[Ft+0x1],Xs[Ft+2]);qs=Ft;do(Xs)[Ft]=vt;end;Hs=r7[3];else end;end;else if B7==0X001 then Xs[r7[0X0001]]=es[r7[4]];else local kx=Vl[r7[0X3]];do(Xs)[0X0]=kx[0X1][kx[2]];end;do Hs=Hs+1;end;do Hs=Hs+1;end;r7=pl[Hs];Hs=Hs+0X1;(Xs)[0]=Xs[0X0000][r7[0X007]];Hs=Hs+0X00001;do Hs=Hs+1;end;do r7=pl[Hs];end;do Hs=Hs+0X1;end;if Xs[r7[0X3]]~=r7[7]then else Hs=r7[1];end;end;end;end;end;end;end);if js then if Ts then if Ks==0X1 then return Xs[Os]();else return Xs[Os](T(Xs,Os+0X1,qs));end;elseif Os then return T(Xs,Os,Ks);end;else do if f(Ts)=="string"then if not(C(Ts,'a\116t\101m\p\116\032t\o\032\y\105e\l\100 a\cr\111\115\s\ m\et\097\m\et\h\od\/C\037\-\c\097\ll\ b\111u\110\dar\y'))then else return coroutine.yield();end;if not(C(Ts,"\094.\-\:\037\d\043\:\032"))then d(Ts,0X0);else(d)('L\117\114\097\112h\ \083\099r\105\112t\:'..(Tl[Hs-1]or"(internal)")..": "..x(Ts),0X0000);end;else(d)(Ts,0x00000);end;end;end;end;else rl=function(...)local Yl=(0);local nl,Jl=0X0001,{};local Pl={[1]=Sl,[2]=Jl};local Ml=k();local cl,ql=qL(...);cl=cl-1;local Xl=(Ml==Q and jl or Ml);for np=0,cl do if Wl>np then Jl[np]=ql[np+1];else break;end;end;if not el then ql=nil;elseif al then Jl[Wl]={n=cl>=Wl and cl-Wl+1 or 0X0,T(ql,Wl+1,cl+0X0001)};end;if Xl==Ml then else(E)(rl,Xl);end;local zl,Bl,bl,gl=c(function()while true do local d2=pl[nl];local J2=(d2[6]);nl=nl+1;if not(J2>=6)then if J2<3 then if not(J2<1)then if J2==2 then else repeat local sm,lm,Dm=ol,Jl,(d2[1]);if#sm>0 then local zf={};do for BB,XB in R,sm do for ym,zm in R,XB do if not(zm[0X0001]==lm and zm[2]>=Dm)then else local Fm=zm[0X0002];if not zf[Fm]then zf[Fm]={lm[Fm]};end;(zm)[1]=zf[Fm];(zm)[2]=0X1;end;end;end;end;end;until true;end;else local my=(kl[d2[3]]);local py=(my[0X00008]);local yy=nil;local zy=#py;if zy>0x0 then yy={};for h3=0X01,zy do local Y3=py[h3];if Y3[0X1]~=0X0 then yy[h3-0X1]=Vl[Y3[2]];else yy[h3-1]={Jl,Y3[2]};end;end;h(ol,yy);end;do Jl[d2[1]]=dL(yy,Xl,my);end;end;else if J2>=4 then if J2==5 then local Wv=Vl[d2[3]];do Jl[0x00000]=Wv[1][Wv[0X2]];end;do d2=pl[nl];end;nl=nl+1;do Jl[0X0]=Jl[0X0000][d2[7]];end;nl=nl+1;nl=nl+0X1;nl=nl+1;do Yl=0;end;Jl[Yl]();Yl=Yl-0X01;do nl=nl+0X1;end;nl=nl+1;nl=nl+0X00001;repeat local Hr,Qr=ol,(Jl);if not(#Hr>0)then else local ci=({});for zZ,sZ in R,Hr do do for Cg,og in R,sZ do if og[0X1]==Qr and og[0x0002]>=0 then local BB=og[2];if not(not ci[BB])then else do ci[BB]={Qr[BB]};end;end;(og)[0X1]=ci[BB];og[0X2]=1;end;end;end;end;end;until true;return;else do(Jl)[d2[0x00001]]=Xl[d2[4]];end;end;else(Jl)[d2[0X1]]={T({},1,d2[3])};end;end;else do if J2<0x9 then if J2>=7 then if J2~=8 then Jl[d2[0x00001]]=d2[0X04];else if Jl[d2[3]]==Jl[d2[0X2]]then else nl=d2[0X001];end;end;else do nl=d2[0X3];end;end;else if not(J2<0Xb)then if J2==0x0000C then do if not(Jl[d2[0X0001]])then else nl=d2[3];end;end;else local TO=d2[1];local kO,hO=Jl[TO]();do if kO then nl=d2[3];Jl[TO+0X0003]=hO;end;end;end;else if J2==10 then for bD=d2[0X1],d2[3]do do(Jl)[bD]=nil;end;end;else(Jl)[d2[1]]=Jl[d2[0x003]];end;end;end;end;end;end;end);if zl then do if Bl then if gl~=1 then return Jl[bl](T(Jl,bl+0X1,Yl));else do return Jl[bl]();end;end;elseif bl then return T(Jl,bl,gl);end;end;else do if f(Bl)=="string"then if C(Bl,"a\116t\e\109\p\116 \116\o y\i\e\l\d\ a\099ro\s\s me\116a\109e\116\104od/C\%\-cal\l bo\117nda\114\121")then return coroutine.yield();end;if C(Bl,"^.-:%d+: ")then(d)("\L\117r\097\p\h\ \S\c\114i\112\116\:"..(Tl[nl-1]or"(internal)").."\:\032"..x(Bl),0x0);else(d)(Bl,0);end;else(d)(Bl,0);end;end;end;end;end;end;end;end;else do if Ql>=0X00007 then if not(Ql>=8)then rl=function(...)local dW={};local WW=1;local YW=(k());local jW=0;local rW=({[2]=dW,[1]=Sl});local EW,SW=qL(...);local MW=(YW==Q and jl or YW);EW=EW-0X1;for cx=0,EW do if Wl>cx then do dW[cx]=SW[cx+0X1];end;else break;end;end;if not el then SW=nil;elseif not(al)then else do(dW)[Wl]={n=EW>=Wl and EW-Wl+0x1 or 0,T(SW,Wl+1,EW+0X001)};end;end;do if MW~=YW then(E)(rl,MW);end;end;local iW,sW,oW,KW=c(function()while true do local nd=pl[WW];local wd=(nd[0X6]);do WW=WW+0X1;end;do if not(wd<0x07)then if not(wd<0X0B)then do if not(wd<13)then if wd~=14 then local H4=(nd[0X03]);local K4=dW[H4];for ax=H4+1,nd[0X2]do K4=K4..dW[ax];end;do dW[nd[1]]=K4;end;else if dW[nd[3]]<=dW[nd[2]]then do WW=nd[0X1];end;end;end;else if wd==12 then do if not(not(dW[nd[0x00003]]<=dW[nd[0x2]]))then else WW=nd[0X0001];end;end;else local zv,Cv=nd[0X1],(nd[0x3]);jW=zv+Cv-0X001;repeat local l8,I8=ol,(dW);if#l8>0x000 then local vU={};for ZM,vM in R,l8 do for yO,wO in R,vM do if not(wO[1]==I8 and wO[0X00002]>=0X0)then else local jT=(wO[0X2]);if not vU[jT]then do vU[jT]={I8[jT]};end;end;wO[1]=vU[jT];do wO[0X2]=0x0001;end;end;end;end;end;until true;do return true,zv,Cv;end;end;end;end;else if not(wd<9)then if wd==0X000a then(dW)[nd[0x0001]]=nd[4];else if dW[nd[0X0001]]then WW=nd[3];end;end;else do if wd==0X00008 then dW[nd[0x001]]=not dW[nd[0X03]];else WW=nd[3];end;end;end;end;else do if wd>=3 then do if not(wd<0X00005)then if wd~=0X6 then(dW)[nd[1]]=MW[nd[4]];else local e9=kl[nd[3]];local S9,B9=e9[0X008],(nil);local Y9=(#S9);if not(Y9>0)then else B9={};for oe=1,Y9 do local Re=S9[oe];do if Re[1]==0X0 then B9[oe-1]={dW,Re[0x2]};else B9[oe-1]=Vl[Re[0X0002]];end;end;end;(h)(ol,B9);end;do dW[nd[0X0001]]=dL(B9,MW,e9);end;end;else if wd~=4 then local gI=nd[1];local TI=(dW[gI+0X1]);local iI=dW[gI+2];local jI=(dW[gI]);dW[gI]=b(function()for Kx=jI,TI,iI do(K)(true,Kx);end;end);do WW=nd[0x3];end;else do dW[nd[0x1]]={T({},1,nd[0x3])};end;end;end;end;else if not(wd<1)then if wd==0X02 then(dW)[nd[1]]=dW[nd[3]]^dW[nd[2]];else local IQ=Vl[0];dW[nd[0X1]]=IQ[1][IQ[0X2]];do nd=pl[WW];end;WW=WW+0X1;dW[nd[0X1]]=dW[0][nd[0X7]];WW=WW+0x1;WW=WW+0X1;nd=pl[WW];WW=WW+0X01;local OQ=nd[0X1];local cQ=(dW[nd[0X3]]);(dW)[OQ+1]=cQ;dW[OQ]=cQ[nd[7]];nd=pl[WW];local iQ=(kl[nd[3]]);WW=WW+0X001;local JQ=iQ[0X8];local sQ=nil;local ZQ=(#JQ);do if not(ZQ>0X0000)then else sQ={};for hO=0x0001,ZQ do local EO=(JQ[hO]);if EO[1]~=0 then do(sQ)[hO-1]=Vl[EO[2]];end;else(sQ)[hO-1]={dW,EO[0X2]};end;end;(h)(ol,sQ);end;end;do(dW)[2]=dL(sQ,MW,iQ);end;nd=pl[WW];do WW=WW+1;end;OQ=nd[0X001];dW[OQ](dW[OQ+1],dW[OQ+2]);jW=OQ-0X0001;WW=WW+1;repeat local pX,NX=ol,dW;do if not(#pX>0)then else local uh={};for x6,S6 in R,pX do do for aF,pF in R,S6 do if not(pF[1]==NX and pF[2]>=0X0)then else local wO=(pF[0X0002]);if not(not uh[wO])then else do(uh)[wO]={NX[wO]};end;end;pF[1]=uh[wO];pF[2]=0x1;end;end;end;end;end;end;until true;return;end;else end;end;end;end;end;end;end);if iW then do if sW then if KW~=0X01 then do return dW[oW](T(dW,oW+1,jW));end;else return dW[oW]();end;elseif not(oW)then else return T(dW,oW,KW);end;end;else do if f(sW)=='str\in\103'then if not(C(sW,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(C(sW,"^.-:%d+: "))then(d)(sW,0);else d("L\117ra\p\h\032\Scr\105\pt\:"..(Tl[WW-1]or'\(\105n\116\e\114na\l\041')..'\058\ '..x(sW),0X00);end;else(d)(sW,0);end;end;end;end;else do if Ql==9 then rl=function(...)local lD,GD=0X1,{};local vD=0;local WD=k();local YD={[1]=Sl,[2]=GD};local DD,TD=qL(...);local iD=((WD==Q and jl or WD));do DD=DD-0X1;end;for Hu=0X00000,DD do if not(Wl>Hu)then break;else GD[Hu]=TD[Hu+1];end;end;if not el then do TD=nil;end;elseif not(al)then else(GD)[Wl]={n=DD>=Wl and DD-Wl+1 or 0,T(TD,Wl+1,DD+1)};end;if iD==WD then else E(rl,iD);end;local jD,bD,HD,zD=c(function()while true do local Qx=pl[lD];local bx=Qx[0X6];lD=lD+1;do if not(bx>=6)then if not(bx>=0x003)then do if not(bx<0X00001)then if bx==2 then(GD)[Qx[1]]=GD[Qx[0X3]]>GD[Qx[0X02]];else local yn=kl[Qx[0X3]];local un,Wn=yn[8],nil;local kn=(#un);if not(kn>0)then else Wn={};for zW=1,kn do local dW=(un[zW]);if dW[0x0001]==0X0000 then Wn[zW-1]={GD,dW[0X2]};else do Wn[zW-0X1]=Vl[dW[0X0002]];end;end;end;(h)(ol,Wn);end;(GD)[Qx[0X001]]=dL(Wn,iD,yn);end;else do for TM=Qx[1],Qx[0X003]do do(GD)[TM]=nil;end;end;end;end;end;else if not(bx>=4)then iD[Qx[4]]=GD[Qx[1]];else do if bx==0X5 then(GD)[Qx[1]]=iD[Qx[0x00004]];lD=lD+1;local AM=(0X04);lD=lD+0x1;do Qx=pl[lD];end;lD=lD+0X1;(GD)[2]=iD[Qx[0X004]];do Qx=pl[lD];end;do lD=lD+1;end;(GD)[Qx[0X01]]=Qx[0x4];Qx=pl[lD];lD=lD+1;do GD[4]=iD[Qx[4]];end;Qx=pl[lD];lD=lD+0X00001;local JM=kl[Qx[3]];local CM=(nil);local UM=JM[8];local ZM=(#UM);if not(ZM>0X0)then else CM={};do for H7=0X0001,ZM do local j7=UM[H7];if j7[1]~=0x0 then(CM)[H7-0X00001]=Vl[j7[2]];else(CM)[H7-1]={GD,j7[0x002]};end;end;end;h(ol,CM);end;(GD)[5]=dL(CM,iD,JM);Qx=pl[lD];do lD=lD+1;end;local LM=(2);local qM=Qx[0X2];if LM==0X00 then else vD=AM+LM-0X00001;end;local cM,lM=nil,nil;if LM==0x1 then cM,lM=qL(GD[AM]());else do cM,lM=qL(GD[AM](T(GD,AM+0X1,vD)));end;end;if qM==1 then vD=AM-1;else if qM==0 then do cM=cM+AM-1;end;vD=cM;else do cM=AM+qM-2;end;vD=cM+1;end;local Uh=0;do for UI=AM,cM do Uh=Uh+1;GD[UI]=lM[Uh];end;end;end;lD=lD+0X1;lD=lD+0X1;lD=lD+1;AM=1;GD[AM]=GD[AM](T(GD,AM+0X001,vD));vD=AM;lD=lD+0X1;lD=lD+1;Qx=pl[lD];lD=lD+0X01;GD[Qx[1]]=GD[Qx[0x3]];do lD=lD+0X1;end;repeat local x0,O0=ol,(GD);if#x0>0X000 then local go=({});for Ai,Vi in R,x0 do for r3,W3 in R,Vi do if W3[1]==O0 and W3[0X2]>=0X0 then local fV=W3[2];do if not go[fV]then do go[fV]={O0[fV]};end;end;end;(W3)[1]=go[fV];W3[2]=1;end;end;end;end;until true;return;else(GD)[Qx[0X1]]=-GD[Qx[3]];end;end;end;end;else do if bx>=9 then do if bx>=0XB then do if bx~=0X0C then(GD)[Qx[0X01]]=iD[Qx[4]];else do(GD)[Qx[1]]=v(GD[Qx[0X3]]);end;end;end;else if bx~=0Xa then GD[Qx[1]]=Qx[4];else end;end;end;else if bx<7 then local e8=Qx[1];local a8,g8=GD[e8]();if not(a8)then else do for h3=0X001,Qx[0X0002]do(GD)[e8+h3]=g8[h3];end;end;lD=Qx[3];end;else do if bx~=8 then(GD)[Qx[0X1]]={T({},0X1,Qx[3])};else do lD=Qx[0x3];end;end;end;end;end;end;end;end;end;end);if not(jD)then do if f(bD)=="string"then if not(C(bD,'a\116\116e\m\112t\ t\111\032\yie\ld\ a\099\114\o\115\115\ \m\101\116\097\m\et\104od\/\067\037\-\ca\l\l\ \098\o\117\110\100\097\114\121'))then else return coroutine.yield();end;if not(C(bD,'\^.\-\058\%\100+\058\ '))then d(bD,0);else(d)("\L\117\114\097p\h\ \S\c\114\105\pt:"..(Tl[lD-1]or"(internal)")..": "..x(bD),0x0000);end;else(d)(bD,0);end;end;else if bD then if zD==0X1 then return GD[HD]();else do return GD[HD](T(GD,HD+0X00001,vD));end;end;elseif HD then do return T(GD,HD,zD);end;end;end;end;else rl=function(...)local jP=(0);local zP,lP=0x1,({});local tP=k();local NP,CP=qL(...);local kP=({[1]=Sl,[2]=lP});NP=NP-1;for kf=0,NP do do if not(Wl>kf)then break;else lP[kf]=CP[kf+0X00001];end;end;end;local TP=((tP==Q and jl or tP));if not el then CP=nil;elseif not(al)then else lP[Wl]={n=NP>=Wl and NP-Wl+1 or 0,T(CP,Wl+0X1,NP+1)};end;if TP~=tP then(E)(rl,TP);end;local eP,pP,YP,RP=c(function()do while true do local j3=pl[zP];local g3=(j3[6]);zP=zP+0X1;if g3>=0X10 then if g3>=0X018 then do if g3>=0X1C then do if g3<0X1E then do if g3~=0x1d then local QN=(Vl[0]);lP[j3[0X1]]=QN[1][QN[2]];zP=zP+1;zP=zP+1;do j3=pl[zP];end;local mN=j3[1];zP=zP+0X01;local GN=lP[j3[0X0003]];lP[mN+0X0001]=GN;lP[mN]=GN[j3[7]];j3=pl[zP];zP=zP+1;QN=Vl[j3[3]];(lP)[j3[0X1]]=QN[1][QN[0X002]];zP=zP+1;zP=zP+1;j3=pl[zP];zP=zP+1;mN=j3[0X1];do lP[mN]=lP[mN](lP[mN+0x1],lP[mN+0x2]);end;jP=mN;zP=zP+1;zP=zP+1;j3=pl[zP];zP=zP+1;do if not lP[0X1]then zP=j3[0X3];end;end;else local WW=(Vl[j3[0X3]]);(lP)[0x1]=WW[0x1][WW[0x2]];do zP=zP+1;end;do zP=zP+1;end;j3=pl[zP];zP=zP+0X001;lP[j3[1]]=lP[j3[0X00003]][j3[7]];zP=zP+0x1;do zP=zP+1;end;j3=pl[zP];zP=zP+1;lP[0x1]=lP[j3[0X3]][j3[7]];zP=zP+0X1;zP=zP+1;do j3=pl[zP];end;zP=zP+1;do WW=Vl[0X2];end;lP[j3[0X1]]=WW[0X0001][WW[0x2]];do zP=zP+0X00001;end;(lP)[1]=lP[0X1]*lP[0X2];do j3=pl[zP];end;zP=zP+1;do(lP)[j3[1]]=lP[0]+lP[j3[2]];end;j3=pl[zP];zP=zP+1;lP[j3[0X1]]=lP[1];j3=pl[zP];zP=zP+1;zP=j3[3];end;end;else if not(g3<0X1f)then if g3==0X000020 then zP=j3[3];else local Nb=(Vl[0]);(lP)[j3[0X1]]=Nb[1][Nb[2]];zP=zP+0x0001;zP=zP+1;j3=pl[zP];zP=zP+1;local vb=j3[0x1];local cb=(lP[0x1]);(lP)[vb+0x1]=cb;lP[vb]=cb[j3[7]];j3=pl[zP];zP=zP+0X1;do(lP)[j3[1]]=TP[j3[0X00004]];end;zP=zP+1;zP=zP+0X0001;j3=pl[zP];zP=zP+1;do(lP)[3]=lP[j3[3]][j3[7]];end;zP=zP+1;do zP=zP+0X0001;end;j3=pl[zP];zP=zP+1;(lP)[j3[1]]=lP[j3[3]][j3[0X7]];j3=pl[zP];do zP=zP+1;end;vb=j3[1];lP[vb]=lP[vb](lP[vb+1],lP[vb+2]);jP=vb;zP=zP+0x1;do zP=zP+1;end;j3=pl[zP];zP=zP+1;if not lP[j3[0X01]]then zP=j3[0X3];end;end;else lP[j3[1]]=D(lP[j3[3]],lP[j3[0X2]]);end;end;end;else if not(g3<26)then if g3~=0X0001B then if not(lP[j3[0X00001]])then else zP=j3[0X3];end;else if lP[j3[3]]<lP[j3[0X2]]then zP=j3[1];end;end;else do if g3==0x19 then local Ya=Vl[j3[3]];do(lP)[1]=Ya[1][Ya[2]];end;zP=zP+0X01;zP=zP+0X1;j3=pl[zP];zP=zP+1;do(lP)[0X01]=lP[1][j3[0X7]];end;do zP=zP+1;end;zP=zP+0X1;j3=pl[zP];do zP=zP+1;end;(lP)[0X1]=lP[1][j3[0X007]];j3=pl[zP];zP=zP+0x1;do Ya=Vl[j3[3]];end;(lP)[2]=Ya[0X1][Ya[0x2]];zP=zP+1;zP=zP+1;j3=pl[zP];zP=zP+1;lP[0X1]=lP[j3[0X003]]*lP[0X0002];j3=pl[zP];do zP=zP+0X01;end;lP[j3[0X00001]]=lP[j3[0X3]]+lP[0X1];j3=pl[zP];zP=zP+1;lP[j3[0X01]]=lP[j3[0X3]];j3=pl[zP];zP=zP+0X1;zP=j3[3];else local NY=Vl[j3[0X3]];lP[0X0001]=NY[0X00001][NY[2]];do j3=pl[zP];end;local MY=0X0001;zP=zP+0X1;local EY=(lP[1]);do lP[MY+0X1]=EY;end;lP[MY]=EY[j3[7]];j3=pl[zP];zP=zP+0X1;do lP[0X00003]=TP[j3[0X4]];end;j3=pl[zP];zP=zP+0X1;lP[j3[0X001]]=lP[j3[0X003]][j3[7]];do j3=pl[zP];end;zP=zP+1;(lP)[3]=lP[j3[3]][j3[0X7]];j3=pl[zP];zP=zP+1;MY=j3[0X00001];lP[MY]=lP[MY](lP[MY+1],lP[MY+0X2]);jP=MY;zP=zP+1;zP=zP+0X1;j3=pl[zP];zP=zP+0X1;do if not lP[j3[0X1]]then do zP=j3[3];end;end;end;end;end;end;end;end;else do if g3>=20 then if g3<22 then do if g3~=21 then lP[j3[1]]=y(lP[j3[3]],lP[j3[0X2]]);else lP[j3[1]]=V(lP[j3[0X3]],lP[j3[0x0002]]);end;end;else do if g3==23 then local Mp=Vl[0X5];do(lP)[0x1]=Mp[0X00001][Mp[0X2]];end;zP=zP+0X0001;zP=zP+1;j3=pl[zP];zP=zP+0X00001;if not lP[1]then do zP=j3[0x3];end;end;else local UP=(Vl[j3[3]]);(lP)[0x1]=UP[1][UP[2]];zP=zP+1;do zP=zP+1;end;do j3=pl[zP];end;local EP=j3[1];zP=zP+1;local iP=(lP[j3[0X00003]]);(lP)[EP+0X00001]=iP;lP[EP]=iP[j3[7]];j3=pl[zP];zP=zP+0X00001;lP[3]=TP[j3[0X4]];j3=pl[zP];zP=zP+0X00001;lP[j3[0X01]]=lP[j3[3]][j3[0X07]];j3=pl[zP];zP=zP+1;lP[3]=lP[0X3][j3[0X007]];do zP=zP+1;end;EP=0x1;(lP)[EP]=lP[EP](lP[EP+1],lP[EP+0X2]);jP=EP;do zP=zP+0x001;end;do zP=zP+0X1;end;j3=pl[zP];do zP=zP+1;end;if not lP[j3[0x1]]then zP=j3[3];end;end;end;end;else if g3>=0x012 then if g3~=19 then lP[j3[0X1]]={T({},0x001,j3[0X3])};else do lP[0X2]=TP[j3[4]];end;zP=zP+0X01;do zP=zP+0X00001;end;do j3=pl[zP];end;zP=zP+1;(lP)[2]=lP[j3[0x3]][j3[7]];j3=pl[zP];zP=zP+1;(lP)[j3[1]]=j3[4];j3=pl[zP];zP=zP+0X00001;lP[j3[0x001]]=j3[4];j3=pl[zP];zP=zP+1;(lP)[5]=j3[4];j3=pl[zP];do zP=zP+0X1;end;local Qq=(j3[1]);do jP=Qq+j3[3]-0x1;end;lP[Qq]=lP[Qq](T(lP,Qq+0X1,jP));do jP=Qq;end;j3=pl[zP];zP=zP+0X001;do(lP[j3[0X00001]])[j3[0X00004]]=lP[2];end;j3=pl[zP];zP=zP+1;(lP)[2]=lP[1][j3[7]];j3=pl[zP];zP=zP+1;Qq=2;local uq=lP[j3[3]];lP[Qq+1]=uq;(lP)[Qq]=uq[j3[7]];j3=pl[zP];zP=zP+0X1;do lP[j3[0x00001]]=TP[j3[4]];end;zP=zP+0X1;zP=zP+0X1;j3=pl[zP];zP=zP+1;(lP)[0X4]=lP[4][j3[0X0007]];j3=pl[zP];do zP=zP+1;end;lP[j3[1]]=lP[0X1][j3[0X7]];zP=zP+1;zP=zP+0X1;j3=pl[zP];zP=zP+0X0001;do(lP)[6]=lP[j3[3]][j3[0X7]];end;zP=zP+0X0001;zP=zP+1;j3=pl[zP];zP=zP+0X0001;local qq=Vl[j3[0X0003]];(lP)[j3[0X01]]=qq[1][qq[2]];zP=zP+1;zP=zP+1;j3=pl[zP];zP=zP+0X001;do(lP)[6]=lP[0X0006]+lP[j3[2]];end;j3=pl[zP];zP=zP+1;qq=Vl[0X00001];(lP)[j3[1]]=qq[0X1][qq[2]];j3=pl[zP];zP=zP+1;do(lP)[0x7]=lP[j3[0X3]][j3[0x0007]];end;do zP=zP+1;end;zP=zP+1;j3=pl[zP];zP=zP+0X1;lP[j3[0x1]]=lP[j3[0X3]][j3[7]];zP=zP+1;zP=zP+0X1;do j3=pl[zP];end;zP=zP+0x01;lP[0X6]=lP[j3[3]]+lP[0X7];zP=zP+0X1;Qq=4;lP[Qq]=lP[Qq](lP[Qq+1],lP[Qq+0x2]);jP=Qq;zP=zP+1;zP=zP+0X1;j3=pl[zP];zP=zP+0X0001;lP[0X00005]=TP[j3[0X4]];zP=zP+1;do zP=zP+0X01;end;j3=pl[zP];zP=zP+0X1;do lP[5]=lP[5][j3[0X7]];end;do zP=zP+0x001;end;do qq=Vl[7];end;(lP)[6]=qq[1][qq[0X2]];do j3=pl[zP];end;zP=zP+0X1;do qq=Vl[0X0009];end;(lP)[j3[1]]=qq[0X1][qq[0x2]];j3=pl[zP];zP=zP+0X1;lP[j3[0X1]]=lP[6]*lP[0X7];j3=pl[zP];zP=zP+1;lP[j3[1]]=j3[4];j3=pl[zP];zP=zP+1;(lP)[j3[1]]=j3[4];j3=pl[zP];zP=zP+0X001;local Wq=0x4;Qq=j3[1];local Gq=(0);if Wq==0X00000 then else jP=Qq+Wq-0X1;end;local fq,Cq=nil,(nil);if Wq==1 then do fq,Cq=qL(lP[Qq]());end;else fq,Cq=qL(lP[Qq](T(lP,Qq+0X00001,jP)));end;do if Gq~=1 then if Gq~=0 then do fq=Qq+Gq-2;end;do jP=fq+1;end;else fq=fq+Qq-1;jP=fq;end;local YV=(0);for KD=Qq,fq do YV=YV+1;(lP)[KD]=Cq[YV];end;else jP=Qq-0x01;end;end;do zP=zP+1;end;zP=zP+0x1;do zP=zP+1;end;Qq=2;do(lP)[Qq]=lP[Qq](T(lP,Qq+0X1,jP));end;do jP=Qq;end;j3=pl[zP];zP=zP+0x1;lP[1][j3[0X4]]=lP[j3[2]];j3=pl[zP];zP=zP+1;do zP=j3[3];end;end;else if g3~=17 then local vj=(Vl[j3[0X03]]);(lP)[0X1]=vj[0X1][vj[2]];zP=zP+1;zP=zP+0X0001;j3=pl[zP];zP=zP+1;local ij,ej=j3[1],lP[j3[0X3]];lP[ij+1]=ej;do(lP)[ij]=ej[j3[7]];end;j3=pl[zP];zP=zP+1;ij=j3[1];lP[ij]=lP[ij](lP[ij+1]);jP=ij;zP=zP+1;zP=zP+0X1;j3=pl[zP];do zP=zP+0X1;end;lP[0x2]=lP[0X1][j3[7]];j3=pl[zP];zP=zP+1;if not(not lP[j3[0X1]])then else do zP=j3[0X3];end;end;else end;end;end;end;end;else if g3<0X008 then if g3>=0X00004 then if g3>=0X6 then if g3~=7 then local xv=Vl[1];(lP)[j3[1]]=xv[1][xv[2]];zP=zP+1;do zP=zP+1;end;j3=pl[zP];zP=zP+1;(lP)[j3[0x0001]]=lP[1][j3[7]];zP=zP+1;zP=zP+0x1;j3=pl[zP];zP=zP+1;do lP[1]=lP[j3[3]][j3[7]];end;do zP=zP+1;end;zP=zP+0x1;do j3=pl[zP];end;zP=zP+0X1;do xv=Vl[j3[3]];end;(lP)[2]=xv[1][xv[2]];zP=zP+1;zP=zP+0X0001;do j3=pl[zP];end;zP=zP+1;(lP)[j3[0X1]]=lP[j3[3]]*lP[j3[0x2]];do j3=pl[zP];end;zP=zP+0X1;lP[j3[0x00001]]=lP[j3[0X3]]-lP[j3[0X2]];j3=pl[zP];zP=zP+1;do lP[0]=lP[j3[0X0003]];end;j3=pl[zP];zP=zP+1;zP=j3[3];else do repeat local t3,K3=ol,lP;if not(#t3>0)then else local Fu=({});for EW,VW in R,t3 do for et,yt in R,VW do if not(yt[0x1]==K3 and yt[0x02]>=0)then else local Et=yt[2];if not Fu[Et]then(Fu)[Et]={K3[Et]};end;(yt)[0x00001]=Fu[Et];(yt)[0X2]=0X0001;end;end;end;end;until true;end;return;end;else if g3~=0X0005 then(lP)[j3[0x0001]]=j3[4];else(lP)[0X00002]=TP[j3[4]];zP=zP+1;zP=zP+1;j3=pl[zP];zP=zP+1;(lP)[0X00003]=lP[j3[0X003]];j3=pl[zP];do zP=zP+0X1;end;local WQ=j3[0X1];lP[WQ]=lP[WQ](lP[WQ+1]);do jP=WQ;end;j3=pl[zP];zP=zP+1;if lP[j3[1]]then zP=j3[0X3];end;end;end;else if g3>=0X2 then if g3==0X003 then local x4=Vl[0X001];(lP)[1]=x4[0X1][x4[0X2]];j3=pl[zP];zP=zP+0X1;(lP)[0X00001]=lP[j3[0X03]][j3[0X7]];zP=zP+1;zP=zP+1;j3=pl[zP];zP=zP+0X1;lP[1]=lP[1][j3[0x007]];j3=pl[zP];zP=zP+0x1;x4=Vl[j3[0X03]];lP[j3[0X1]]=x4[0X00001][x4[0X2]];zP=zP+1;do zP=zP+1;end;j3=pl[zP];zP=zP+0X1;lP[0X1]=lP[j3[3]]*lP[2];j3=pl[zP];zP=zP+0X1;(lP)[0X00001]=lP[0X0000]+lP[j3[0x2]];do j3=pl[zP];end;zP=zP+1;do lP[0]=lP[j3[0X3]];end;j3=pl[zP];zP=zP+0X1;zP=j3[0X3];else local Uq,Gq=j3[0X1],((j3[2]-0X1)*50);local jq=(lP[Uq]);do for YD=0X0001,j3[3]do jq[Gq+YD]=lP[Uq+YD];end;end;end;else if g3==0X1 then do repeat local gx,Px,rx=ol,lP,j3[0X1];if not(#gx>0X0)then else local SC=({});for xD,mD in R,gx do do for nT,xT in R,mD do if not(xT[0X1]==Px and xT[2]>=rx)then else local zD=(xT[0X0002]);if not(not SC[zD])then else SC[zD]={Px[zD]};end;xT[1]=SC[zD];do(xT)[2]=1;end;end;end;end;end;end;until true;end;else local qO=(Vl[j3[0X00003]]);(lP)[1]=qO[0X0001][qO[2]];j3=pl[zP];zP=zP+1;lP[0X1]=lP[j3[3]]*lP[0X00001];j3=pl[zP];zP=zP+0X001;(lP)[0]=lP[j3[0X0003]];j3=pl[zP];do zP=zP+1;end;zP=j3[3];end;end;end;else if g3>=12 then do if not(g3>=14)then do if g3~=0x000d then for O0=j3[0x0001],j3[0X3]do(lP)[O0]=nil;end;else local ay=(Vl[6]);lP[j3[1]]=ay[1][ay[2]];j3=pl[zP];local ry=j3[1];zP=zP+1;local hy=(lP[j3[0X3]]);do(lP)[ry+0X1]=hy;end;lP[ry]=hy[j3[0X7]];do j3=pl[zP];end;zP=zP+0X1;(lP)[j3[1]]=lP[0];do j3=pl[zP];end;do zP=zP+1;end;lP[j3[0x1]]=TP[j3[0X4]];j3=pl[zP];zP=zP+1;do lP[5]=lP[5][j3[7]];end;zP=zP+0X1;zP=zP+1;j3=pl[zP];do zP=zP+1;end;ay=Vl[j3[0X03]];lP[j3[0X1]]=ay[0x0001][ay[0X2]];do j3=pl[zP];end;zP=zP+0X1;ay=Vl[j3[0X3]];(lP)[j3[0X1]]=ay[1][ay[0X00002]];j3=pl[zP];zP=zP+0X00001;(lP)[j3[0x1]]=lP[6]*lP[j3[0X2]];j3=pl[zP];zP=zP+0X01;lP[j3[0X1]]=j3[0x4];j3=pl[zP];zP=zP+1;(lP)[0X00008]=j3[0X4];j3=pl[zP];do zP=zP+1;end;ry=j3[0x1];local Ay=j3[0X2];local By=(j3[3]);if By~=0X0 then do jP=ry+By-0X1;end;end;local Ry,jy=nil,nil;if By==0X1 then Ry,jy=qL(lP[ry]());else Ry,jy=qL(lP[ry](T(lP,ry+0X1,jP)));end;if Ay==1 then jP=ry-1;else if Ay~=0 then Ry=ry+Ay-2;do jP=Ry+1;end;else Ry=Ry+ry-0x1;jP=Ry;end;local sd=(0X0000);do for u1=ry,Ry do sd=sd+1;lP[u1]=jy[sd];end;end;end;zP=zP+1;zP=zP+1;do zP=zP+0x01;end;ry=2;lP[ry]=lP[ry](T(lP,ry+0x1,jP));jP=ry;zP=zP+1;ay=Vl[6];(ay[1])[ay[0x2]]=lP[2];zP=zP+0X1;ay=Vl[0X6];do lP[2]=ay[1][ay[2]];end;zP=zP+1;do zP=zP+0x00001;end;j3=pl[zP];zP=zP+1;(lP)[0x3]=TP[j3[4]];j3=pl[zP];zP=zP+0X0001;do(lP)[3]=lP[3][j3[0X7]];end;j3=pl[zP];zP=zP+1;do lP[j3[0X1]]=j3[4];end;j3=pl[zP];zP=zP+1;(lP)[j3[1]]=j3[0X4];do j3=pl[zP];end;do zP=zP+1;end;lP[j3[1]]=j3[4];zP=zP+1;ry=3;jP=ry+4-1;(lP)[ry]=lP[ry](T(lP,ry+1,jP));do jP=ry;end;j3=pl[zP];zP=zP+0x01;(lP)[j3[0X1]]=lP[0X2]+lP[3];do j3=pl[zP];end;zP=zP+0X1;lP[j3[0X0001]][j3[0x4]]=lP[2];j3=pl[zP];zP=zP+1;ay=Vl[0X5];do lP[j3[0X1]]=ay[1][ay[2]];end;j3=pl[zP];do zP=zP+0X0001;end;do if lP[1]==lP[2]then zP=j3[1];end;end;end;end;else if g3~=0x0000F then(lP)[j3[0X1]]=TP[j3[4]];else local uN=Vl[1];lP[0X1]=uN[1][uN[0X2]];j3=pl[zP];do zP=zP+0x1;end;(lP)[0x1]=lP[0X1][j3[0x7]];zP=zP+1;zP=zP+0X1;j3=pl[zP];zP=zP+1;(lP)[1]=lP[1][j3[7]];do zP=zP+0X1;end;uN=Vl[2];(lP)[0x02]=uN[1][uN[0x02]];j3=pl[zP];zP=zP+0X1;(lP)[1]=lP[j3[3]]*lP[2];j3=pl[zP];do zP=zP+0x0001;end;(lP)[0X00001]=lP[j3[0X3]]-lP[j3[2]];j3=pl[zP];zP=zP+1;lP[j3[1]]=lP[j3[0X0003]];do j3=pl[zP];end;zP=zP+0X1;do zP=j3[0X3];end;end;end;end;else if not(g3>=10)then if g3==9 then local yY=Vl[j3[3]];lP[1]=yY[0x1][yY[0X2]];j3=pl[zP];local SY=j3[0X1];zP=zP+1;local bY=lP[1];do lP[SY+0X1]=bY;end;do(lP)[SY]=bY[j3[0X7]];end;j3=pl[zP];zP=zP+0X00001;(lP)[0X3]=TP[j3[4]];zP=zP+1;zP=zP+0X1;j3=pl[zP];zP=zP+1;do(lP)[3]=lP[j3[3]][j3[0x7]];end;j3=pl[zP];zP=zP+0X001;do(lP)[j3[0X1]]=lP[j3[3]][j3[0X00007]];end;do zP=zP+0X1;end;zP=zP+0X001;zP=zP+0X1;do SY=0X1;end;lP[SY]=lP[SY](lP[SY+0X00001],lP[SY+0X002]);jP=SY;j3=pl[zP];zP=zP+1;if not(not lP[j3[0x0001]])then else do zP=j3[3];end;end;else lP[j3[0X00001]]=TP[j3[0X4]];zP=zP+0X1;zP=zP+0X1;j3=pl[zP];do zP=zP+1;end;do(lP)[0X0]=lP[j3[3]][j3[7]];end;do zP=zP+1;end;zP=zP+1;j3=pl[zP];zP=zP+1;lP[1]=j3[0X004];do j3=pl[zP];end;zP=zP+0X1;do lP[2]=j3[0x4];end;j3=pl[zP];zP=zP+0X1;local dJ=Vl[0X0];do lP[3]=j3[0X04];end;do j3=pl[zP];end;local KJ=(j3[0X1]);zP=zP+0X001;jP=KJ+4-1;lP[KJ]=lP[KJ](T(lP,KJ+0x001,jP));jP=KJ;j3=pl[zP];do zP=zP+1;end;do lP[j3[0X1]]=dJ[1][dJ[2]];end;zP=zP+1;zP=zP+0X00001;do j3=pl[zP];end;zP=zP+1;local oJ=lP[j3[3]];KJ=0X1;(lP)[KJ+0X1]=oJ;lP[KJ]=oJ[j3[7]];zP=zP+0X1;KJ=0X1;lP[KJ]=lP[KJ](lP[KJ+0X1]);do jP=KJ;end;zP=zP+0X00001;zP=zP+1;j3=pl[zP];zP=zP+0X01;if not(lP[j3[0X1]])then else do zP=j3[0x3];end;end;end;else if g3==11 then local o2=kl[j3[0X03]];local X2=nil;local r2=(o2[8]);local x2=#r2;do if not(x2>0x0000)then else X2={};for C3=0X1,x2 do local z3=r2[C3];do if z3[0X1]~=0 then do(X2)[C3-0X1]=Vl[z3[2]];end;else X2[C3-0X0001]={lP,z3[2]};end;end;end;(h)(ol,X2);end;end;(lP)[j3[1]]=dL(X2,TP,o2);else local Jh=(Vl[j3[3]]);lP[j3[0X1]]=Jh[0X1][Jh[0X2]];zP=zP+0X1;zP=zP+0X00001;do j3=pl[zP];end;local Th=lP[0X1];do zP=zP+1;end;local Fh=(j3[1]);do lP[Fh+1]=Th;end;(lP)[Fh]=Th[j3[0X7]];do j3=pl[zP];end;zP=zP+0X1;lP[0X0003]=TP[j3[4]];do zP=zP+1;end;do zP=zP+1;end;j3=pl[zP];zP=zP+1;(lP)[3]=lP[0X03][j3[0X7]];j3=pl[zP];zP=zP+1;lP[j3[1]]=lP[j3[0x3]][j3[0X7]];zP=zP+0x1;zP=zP+1;j3=pl[zP];do zP=zP+1;end;do Fh=j3[1];end;(lP)[Fh]=lP[Fh](lP[Fh+0x01],lP[Fh+0X2]);do jP=Fh;end;j3=pl[zP];do zP=zP+0X1;end;if not(not lP[1])then else zP=j3[3];end;end;end;end;end;end;end;end;end);do if not(eP)then do if f(pP)~="string"then(d)(pP,0);else do if C(pP,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if C(pP,"^.-:%d+: ")then(d)("Luraph Script:"..(Tl[zP-0X1]or"(internal)").."\:\032"..x(pP),0);else d(pP,0);end;end;end;else if pP then do if RP==0X1 then return lP[YP]();else return lP[YP](T(lP,YP+1,jP));end;end;elseif YP then return T(lP,YP,RP);end;end;end;end;end;end;end;else do if Ql==6 then rl=function(...)local SV,AV=0X1,({});local lV=(k());local QV=({[1]=Sl,[2]=AV});local wV,JV=qL(...);wV=wV-0x1;local GV=((lV==Q and jl or lV));do for pP=0x000,wV do if Wl>pP then AV[pP]=JV[pP+1];else do break;end;end;end;end;if not el then JV=nil;elseif not(al)then else(AV)[Wl]={n=wV>=Wl and wV-Wl+0X1 or 0X0,T(JV,Wl+1,wV+0x00001)};end;local uV=(0);if GV==lV then else E(rl,GV);end;local LV,aV,YV,BV=c(function()while true do local Ia=(pl[SV]);local xa=(Ia[6]);SV=SV+0X1;do if not(xa<12)then do if xa>=18 then if not(xa>=21)then if not(xa<0x0013)then do if xa==0X14 then do AV[Ia[0X1]]=Ia[4];end;else local Bi=Vl[Ia[3]];(AV)[Ia[1]]=Bi[1][Bi[2]];Ia=pl[SV];SV=SV+0X1;(AV)[Ia[1]]=AV[Ia[0X3]][Ia[0x007]];Ia=pl[SV];local Oi=(Ia[1]);SV=SV+1;local oi=AV[0];(AV)[Oi+0x1]=oi;(AV)[Oi]=oi[Ia[7]];Ia=pl[SV];SV=SV+0X1;do(AV)[2]=Ia[0X4];end;do SV=SV+0x001;end;Oi=0;AV[Oi]=AV[Oi](AV[Oi+0x1],AV[Oi+2]);do uV=Oi;end;Ia=pl[SV];SV=SV+1;if not AV[Ia[0X0001]]then SV=Ia[3];end;end;end;else AV[Ia[0X1]]={T({},1,Ia[0X0003])};end;else if not(xa>=22)then(AV)[Ia[1]]=AV[Ia[0X3]]%AV[Ia[2]];else if xa~=23 then do if not(AV[Ia[0X0003]]<=AV[Ia[0X002]])then else SV=Ia[0X00001];end;end;else for lI=Ia[0X01],Ia[0x3]do AV[lI]=nil;end;end;end;end;else if not(xa<0XF)then if xa<16 then SV=Ia[3];else if xa~=17 then do(AV)[Ia[0X1]]=V(AV[Ia[3]],AV[Ia[2]]);end;else(AV)[Ia[1]]=GV[Ia[4]];end;end;else if xa<13 then AV[Ia[1]]=QV[Ia[3]];else do if xa==0xe then local PY=(Vl[Ia[3]]);do AV[Ia[0X1]]=PY[0X001][PY[2]];end;Ia=pl[SV];SV=SV+0X00001;(AV)[Ia[0x01]]=AV[0][Ia[7]];Ia=pl[SV];do SV=SV+0X1;end;if AV[Ia[3]]==Ia[7]then else SV=Ia[0X001];end;else end;end;end;end;end;end;else if not(xa<0X00006)then do if not(xa>=9)then if xa>=0X7 then if xa~=8 then AV[Ia[0X1]]=GV[Ia[4]];SV=SV+0X00001;SV=SV+0X01;Ia=pl[SV];local ww=0X0;SV=SV+0X1;AV[Ia[1]]=Ia[4];do SV=SV+1;end;(AV)[ww]=AV[ww](AV[ww+0X1]);uV=ww;Ia=pl[SV];do SV=SV+1;end;if not AV[Ia[1]]then SV=Ia[3];end;else(AV)[1]=AV[0][Ia[0X7]];do Ia=pl[SV];end;do SV=SV+0X01;end;local fE,KE=AV[Ia[0X0003]],(1);AV[KE+1]=fE;(AV)[KE]=fE[Ia[0X7]];do Ia=pl[SV];end;SV=SV+0X1;AV[0X00003]=Ia[0x4];SV=SV+0X00001;KE=0X1;AV[KE]=AV[KE](AV[KE+0x0001],AV[KE+2]);uV=KE;SV=SV+1;do SV=SV+0X01;end;do SV=SV+0X1;end;AV[2]=AV[1];do SV=SV+1;end;local ZE=Vl[3];(ZE[0x001])[ZE[0x2]]=AV[0X2];Ia=pl[SV];do SV=SV+0X1;end;ZE=Vl[Ia[0X3]];(AV)[0x02]=ZE[0X1][ZE[2]];SV=SV+1;SV=SV+0X1;do Ia=pl[SV];end;SV=SV+1;AV[2]=AV[Ia[0X00003]][Ia[0x0007]];do Ia=pl[SV];end;SV=SV+1;(AV)[0X2]=AV[Ia[3]][Ia[0X7]];Ia=pl[SV];SV=SV+1;(AV)[Ia[1]]=AV[Ia[3]][Ia[7]];Ia=pl[SV];SV=SV+0X01;AV[3]=AV[3][Ia[0X007]];Ia=pl[SV];do SV=SV+0X00001;end;AV[Ia[1]]=AV[0X3][Ia[7]];Ia=pl[SV];SV=SV+0x001;do AV[4]=GV[Ia[4]];end;do SV=SV+0x1;end;SV=SV+1;Ia=pl[SV];do SV=SV+0x1;end;do(AV)[Ia[0X1]]=AV[4][Ia[0X7]];end;SV=SV+1;SV=SV+1;Ia=pl[SV];SV=SV+0X1;do(AV)[5]=AV[Ia[0X3]][Ia[0X7]];end;Ia=pl[SV];SV=SV+0X1;do AV[Ia[0x00001]]=AV[Ia[3]][Ia[0X7]];end;SV=SV+1;do SV=SV+0X1;end;Ia=pl[SV];SV=SV+0X1;(AV)[Ia[1]]=AV[0X00005][Ia[0X7]];SV=SV+1;SV=SV+1;Ia=pl[SV];SV=SV+0x1;AV[Ia[1]]=AV[5][Ia[7]];Ia=pl[SV];do SV=SV+0X1;end;(AV)[Ia[1]]=AV[Ia[3]]*Ia[0X7];Ia=pl[SV];do SV=SV+1;end;KE=Ia[0X001];(AV)[KE]=AV[KE](AV[KE+0X1]);uV=KE;do Ia=pl[SV];end;SV=SV+0x01;(AV)[Ia[0X1]]=AV[3]*AV[0x004];Ia=pl[SV];do SV=SV+1;end;do AV[Ia[1]][Ia[0X04]]=AV[3];end;Ia=pl[SV];SV=SV+1;SV=Ia[3];end;else AV[0X0]=nil;Ia=pl[SV];local cp=Vl[Ia[0x03]];SV=SV+0x0001;do(cp[0X1])[cp[0x2]]=AV[0x00000];end;Ia=pl[SV];SV=SV+1;SV=Ia[0X3];end;else do if not(xa<0XA)then if xa~=11 then local FU=(Vl[0X5]);AV[Ia[0X1]]=FU[0X1][FU[2]];Ia=pl[SV];SV=SV+1;FU=Vl[0x2];AV[Ia[1]]=FU[0X01][FU[2]];Ia=pl[SV];SV=SV+1;(AV)[Ia[1]]=AV[Ia[3]][Ia[0X07]];do Ia=pl[SV];end;SV=SV+0X1;local IU=Ia[1];do AV[IU]=AV[IU](AV[IU+0x1]);end;uV=IU;SV=SV+0X001;SV=SV+1;Ia=pl[SV];SV=SV+1;do if AV[0X0]==Ia[0X00007]then SV=Ia[1];end;end;else(AV)[Ia[1]]=nil;Ia=pl[SV];do SV=SV+0X1;end;local g8=Vl[Ia[3]];g8[0x1][g8[2]]=AV[Ia[1]];Ia=pl[SV];SV=SV+1;SV=Ia[0x00003];end;else local wU=Vl[0];AV[0]=wU[0X1][wU[0X2]];SV=SV+0x0001;SV=SV+0x001;Ia=pl[SV];SV=SV+0X00001;if AV[Ia[0X3]]~=Ia[0X7]then else SV=Ia[1];end;end;end;end;end;else if xa<3 then do if not(xa<0X1)then if xa~=2 then local kt=(Vl[Ia[3]]);AV[0]=kt[1][kt[0X00002]];SV=SV+0X01;do uV=0;end;(AV[uV])();uV=uV-1;SV=SV+0X1;SV=SV+0X00001;do Ia=pl[SV];end;SV=SV+0X1;do SV=Ia[0X3];end;else AV[Ia[0X1]]=AV[Ia[0X003]]>=AV[Ia[0X002]];end;else local Z2=(kl[Ia[3]]);local k2,e2=Z2[8],nil;local L2=(#k2);if L2>0 then do e2={};end;do for KU=1,L2 do local yU=k2[KU];do if yU[1]==0X0 then(e2)[KU-1]={AV,yU[2]};else(e2)[KU-1]=Vl[yU[0x2]];end;end;end;end;h(ol,e2);end;AV[Ia[0x1]]=dL(e2,GV,Z2);end;end;else do if xa<0X4 then if not AV[Ia[0X00001]]then SV=Ia[0X0003];end;else if xa~=5 then(AV)[Ia[0X1]]=not AV[Ia[3]];else do repeat local QZ,LZ=ol,(AV);if#QZ>0 then local wS=({});for gp,op in R,QZ do do for zR,MR in R,op do do if MR[1]==LZ and MR[0x2]>=0 then local W0=(MR[0x2]);if not(not wS[W0])then else wS[W0]={LZ[W0]};end;MR[1]=wS[W0];(MR)[2]=1;end;end;end;end;end;end;until true;end;return;end;end;end;end;end;end;end;end;end);do if not(LV)then do if f(aV)~="string"then d(aV,0);else if not(C(aV,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if C(aV,"^.-:%d+: ")then(d)("Luraph Script:"..(Tl[SV-1]or'\040\in\116e\114\110\097\108\)')..": "..x(aV),0X0);else d(aV,0);end;end;end;else do if aV then if BV==1 then return AV[YV]();else return AV[YV](T(AV,YV+0X1,uV));end;elseif YV then return T(AV,YV,BV);end;end;end;end;end;else do rl=function(...)local BA=1;local QA=(0X0);local qA={};local NA=(k());local UA,cA=qL(...);local lA=({[1]=Sl,[2]=qA});do UA=UA-0X1;end;local sA=(NA==Q and jl or NA);do for OC=0X000,UA do if not(Wl>OC)then break;else do qA[OC]=cA[OC+0X1];end;end;end;end;if not el then cA=nil;elseif al then do qA[Wl]={n=UA>=Wl and UA-Wl+1 or 0,T(cA,Wl+1,UA+1)};end;end;if sA~=NA then(E)(rl,sA);end;local YA,HA,vA,AA=c(function()while true do local Wm=(pl[BA]);local em=(Wm[0X6]);BA=BA+0X1;if em<7 then do if em<0X00003 then do if em<1 then do qA[Wm[1]][qA[Wm[3]]]=qA[Wm[2]];end;else do if em==2 then(qA)[Wm[0x1]]=qA[Wm[0X03]]==qA[Wm[0X2]];else qA[Wm[1]]=Wm[4];end;end;end;end;else if em<5 then if em==0X04 then local fB=(kl[Wm[3]]);local DB,FB=fB[8],(nil);local xB=(#DB);do if xB>0 then do FB={};end;do for YD=1,xB do local lD=DB[YD];if lD[1]==0X0 then(FB)[YD-1]={qA,lD[0x002]};else FB[YD-1]=Vl[lD[2]];end;end;end;h(ol,FB);end;end;qA[Wm[1]]=dL(FB,sA,fB);else(qA)[Wm[0X001]]=qA[Wm[0x3]]<=qA[Wm[2]];end;else if em==6 then else local qv=Vl[Wm[0x0003]];(qA)[Wm[1]]=qv[1][qv[2]];BA=BA+0x001;BA=BA+0X0001;do Wm=pl[BA];end;BA=BA+1;(qA)[Wm[0x1]]=qA[0][Wm[0X7]];do BA=BA+0X1;end;BA=BA+0x1;do Wm=pl[BA];end;local xv=(Wm[0X00001]);BA=BA+1;local Pv=(nil);local Kv=(qA[Wm[0X3]]);qA[xv+1]=Kv;(qA)[xv]=Kv[Wm[7]];Wm=pl[BA];BA=BA+1;local Vv=kl[Wm[3]];local Zv=Vv[8];local yv=#Zv;if not(yv>0)then else Pv={};for fd=0X1,yv do local qd=Zv[fd];if qd[0X1]==0 then(Pv)[fd-1]={qA,qd[2]};else(Pv)[fd-1]=Vl[qd[2]];end;end;h(ol,Pv);end;(qA)[Wm[1]]=dL(Pv,sA,Vv);Wm=pl[BA];do BA=BA+0X1;end;do xv=Wm[0X1];end;(qA[xv])(qA[xv+1],qA[xv+2]);QA=xv-0x1;do BA=BA+1;end;repeat local rZ,bZ=ol,qA;if#rZ>0X0 then local ao=({});for HO,iO in R,rZ do for YG,qG in R,iO do if qG[1]==bZ and qG[0X2]>=0 then local LU=(qG[2]);if not(not ao[LU])then else ao[LU]={bZ[LU]};end;do(qG)[1]=ao[LU];end;(qG)[2]=1;end;end;end;end;until true;return;end;end;end;end;else do if em<11 then if not(em<0x00009)then if em~=10 then(lA)[Wm[0X3]]=qA[Wm[0x1]];else local zM=Wm[0X1];local TM=qA[zM];local KM=(qA[zM+1]);local sM=qA[zM+2];(qA)[zM]=b(function()do for X4=TM,KM,sM do(K)(true,X4);end;end;end);BA=Wm[0X3];end;else do if em==8 then local FO=(Wm[1]);local MO,pO=qA[FO]();if not(MO)then else BA=Wm[3];do(qA)[FO+0X3]=pO;end;end;else do qA[Wm[0X1]]={T({},0X001,Wm[0x3])};end;end;end;end;else if em>=13 then do if em==0x000e then if qA[Wm[3]]==qA[Wm[0X00002]]then else do BA=Wm[0X1];end;end;else qA[Wm[0X1]]=sA[Wm[4]];end;end;else do if em==12 then qA[Wm[1]]=not qA[Wm[3]];else BA=Wm[0X003];end;end;end;end;end;end;end;end);do if not(YA)then do if f(HA)~="\strin\103"then d(HA,0);else if not(C(HA,'\097\116te\109p\116 \116o\032\y\105\eld\032a\099r\os\s\ \109et\097\m\101t\h\111\100/\C\%\-\cal\108\ \098\o\117\110\da\114\y'))then else return coroutine.yield();end;if C(HA,"^.-:%d+: ")then d("Luraph Script:"..(Tl[BA-1]or"\(i\110t\101r\110\097\l\041")..": "..x(HA),0);else d(HA,0X00000);end;end;end;else do if HA then if AA==0X1 then do return qA[vA]();end;else return qA[vA](T(qA,vA+1,QA));end;elseif not(vA)then else return T(qA,vA,AA);end;end;end;end;end;end;end;end;end;end;end;end;else if Ql>=15 then if not(Ql>=0X12)then if Ql>=16 then if Ql==17 then do rl=function(...)local pR,ZR=0X1,(0);local PR=({});local IR=(k());local vR=({[1]=Sl,[2]=PR});local QR,uR=qL(...);QR=QR-1;do for UO=0X00,QR do if not(Wl>UO)then break;else PR[UO]=uR[UO+0X1];end;end;end;local KR=((IR==Q and jl or IR));if not el then uR=nil;elseif al then(PR)[Wl]={n=QR>=Wl and QR-Wl+0X1 or 0X00000,T(uR,Wl+1,QR+1)};end;if KR==IR then else E(rl,KR);end;local cR,sR,TR,UR=c(function()while true do local D1=(pl[pR]);local U1=(D1[6]);do pR=pR+0x1;end;if U1<6 then do if U1>=0x00003 then if not(U1<4)then if U1==5 then do PR[D1[1]]=PR[D1[0x3]]~=PR[D1[2]];end;else PR[D1[1]]=KR[D1[0x4]];end;else do PR[D1[0X1]]=PR[D1[0X3]]==PR[D1[2]];end;end;else if U1>=1 then if U1~=2 then if PR[D1[3]]<=PR[D1[2]]then pR=D1[1];end;else local iA=(D1[0X1]);do for jm=iA,iA+(D1[0X3]-0x1)do PR[jm]=uR[Wl+(jm-iA)+1];end;end;end;else end;end;end;else if U1<9 then do if not(U1<7)then do if U1~=0X8 then(PR)[D1[0x0001]]=D1[0X004];else local Ye=Vl[0];PR[D1[1]]=Ye[0X001][Ye[0X0002]];pR=pR+0X1;local Qe=0X0;do pR=pR+1;end;D1=pl[pR];pR=pR+0X01;local Te=(PR[0]);(PR)[Qe+1]=Te;(PR)[Qe]=Te[D1[7]];do D1=pl[pR];end;pR=pR+0X01;PR[D1[0X01]]=D1[4];D1=pl[pR];pR=pR+0X1;Qe=D1[1];PR[Qe]=PR[Qe](PR[Qe+1],PR[Qe+0X2]);ZR=Qe;do pR=pR+1;end;do pR=pR+0X01;end;do D1=pl[pR];end;do pR=pR+1;end;(PR)[0]=PR[D1[0X3]][D1[0X7]];do pR=pR+0X1;end;pR=pR+0X1;do D1=pl[pR];end;pR=pR+0X00001;Qe=D1[1];Te=PR[0X00000];do PR[Qe+1]=Te;end;do PR[Qe]=Te[D1[7]];end;D1=pl[pR];pR=pR+0X00001;local le=(kl[D1[3]]);local De=(le[8]);local pe=(nil);local Le=(#De);if not(Le>0)then else pe={};for Ns=0X1,Le do local us=(De[Ns]);if us[1]==0X0 then pe[Ns-0X00001]={PR,us[2]};else(pe)[Ns-0x00001]=Vl[us[0X002]];end;end;h(ol,pe);end;do PR[0X2]=dL(pe,KR,le);end;do pR=pR+1;end;do Qe=0;end;PR[Qe](PR[Qe+1],PR[Qe+0X00002]);ZR=Qe-1;pR=pR+0X1;pR=pR+0x0001;pR=pR+1;do repeat local nN,NN=ol,(PR);do if not(#nN>0)then else local B9={};for Q1,e1 in R,nN do do for ee,Oe in R,e1 do if not(Oe[0x0001]==NN and Oe[2]>=0x00)then else local M1=(Oe[0X00002]);if not(not B9[M1])then else(B9)[M1]={NN[M1]};end;Oe[0X1]=B9[M1];Oe[2]=1;end;end;end;end;end;end;until true;end;do return;end;end;end;else for OD=D1[1],D1[0X3]do do(PR)[OD]=nil;end;end;end;end;else if not(U1<11)then do if U1~=0xc then(PR)[D1[0X0001]]={T({},1,D1[0x3])};else local Zi=kl[D1[0X3]];local Gi=(Zi[8]);local yi=nil;local bi=(#Gi);if bi>0x0 then yi={};do for Mc=0X00001,bi do local Zc=(Gi[Mc]);do if Zc[0X1]==0 then(yi)[Mc-0X001]={PR,Zc[0x2]};else yi[Mc-1]=Vl[Zc[2]];end;end;end;end;(h)(ol,yi);end;(PR)[D1[1]]=dL(yi,KR,Zi);end;end;else if U1~=10 then(PR[D1[1]])[PR[D1[3]]]=PR[D1[0x002]];else pR=D1[0X3];end;end;end;end;end;end);if cR then do if sR then if UR~=0X001 then return PR[TR](T(PR,TR+0X001,ZR));else do return PR[TR]();end;end;elseif TR then return T(PR,TR,UR);end;end;else do if f(sR)=='\115t\114i\110\103'then if not(C(sR,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(C(sR,"^.-:%d+: "))then(d)(sR,0);else d("Luraph Script:"..(Tl[pR-0X1]or'\(\int\e\114n\097\l)').."\058 "..x(sR),0);end;else(d)(sR,0X0);end;end;end;end;end;else rl=function(...)local W7,a7=0X0001,({});local m7=k();local h7,u7=qL(...);local O7,A7={[1]=Sl,[2]=a7},(m7==Q and jl or m7);h7=h7-1;local x7=(0x00000);for dw=0,h7 do do if Wl>dw then(a7)[dw]=u7[dw+0X1];else break;end;end;end;if not el then do u7=nil;end;elseif al then do(a7)[Wl]={n=h7>=Wl and h7-Wl+0X1 or 0x0000,T(u7,Wl+1,h7+0X001)};end;end;if A7~=m7 then(E)(rl,A7);end;local B7,b7,i7,N7=c(function()do while true do local NG=pl[W7];local RG=(NG[6]);W7=W7+1;if RG<9 then do if RG<0x4 then if not(RG>=2)then do if RG==1 then repeat local po,Lo,Fo=ol,a7,NG[0X1];do if#po>0 then local YO={};do for Ml,dl in R,po do for io,lo in R,dl do if not(lo[0X1]==Lo and lo[2]>=Fo)then else local Zs=lo[0X02];if not(not YO[Zs])then else YO[Zs]={Lo[Zs]};end;(lo)[0X001]=YO[Zs];(lo)[0x02]=0X00001;end;end;end;end;end;end;until true;else a7[NG[0X01]]={T({},0X00001,NG[3])};end;end;else do if RG==0x3 then for oj=NG[0X1],NG[0X0003]do a7[oj]=nil;end;else local o0=(Vl[NG[3]]);(a7)[0x2]=o0[1][o0[0X02]];NG=pl[W7];W7=W7+1;(a7)[NG[1]]=a7[NG[0X3]][NG[0X007]];W7=W7+0X1;W7=W7+0X1;NG=pl[W7];W7=W7+1;do if a7[NG[0X003]]~=NG[7]then do W7=NG[0X1];end;end;end;end;end;end;else if not(RG<6)then if RG>=0x07 then if RG==8 then(a7)[NG[1]]=a7[NG[3]];else repeat local un,Sn=ol,a7;if#un>0X0 then local hi=({});for nq,Mq in R,un do for ir,Qr in R,Mq do if Qr[1]==Sn and Qr[0X00002]>=0 then local sY=Qr[2];do if not(not hi[sY])then else do(hi)[sY]={Sn[sY]};end;end;end;(Qr)[1]=hi[sY];(Qr)[0x2]=1;end;end;end;end;until true;return;end;else do(a7)[NG[1]]=t(a7[NG[0X3]],a7[NG[0X2]]);end;end;else if RG==5 then local x3=kl[NG[3]];local c3,M3=x3[8],(nil);local s3=(#c3);if s3>0X0 then M3={};for uz=1,s3 do local Hz=c3[uz];do if Hz[1]==0 then(M3)[uz-1]={a7,Hz[0x2]};else do M3[uz-1]=Vl[Hz[2]];end;end;end;end;(h)(ol,M3);end;do(a7)[NG[1]]=dL(M3,A7,x3);end;else end;end;end;end;else if not(RG<13)then if not(RG>=0Xf)then if RG~=14 then(a7)[NG[0X1]]=a7[NG[3]]<=a7[NG[0x0002]];else W7=NG[3];end;else do if not(RG>=0X000010)then local IJ=(Vl[NG[3]]);do(a7)[NG[1]]=IJ[0X1][IJ[0X2]];end;NG=pl[W7];W7=W7+0X1;a7[0x1]=a7[0X1][NG[7]];W7=W7+1;do W7=W7+0X1;end;NG=pl[W7];W7=W7+0X001;do if a7[0X1]==NG[7]then else W7=NG[0X1];end;end;else if RG==0X00011 then local Bw=(NG[0x1]);local uw=(b(function(...)(K)();for Yd,kd,Vd,Ed,pd,Ad,Gd,Nd,yd,Wd in...do K(true,{Yd,kd,Vd,Ed,pd,Ad,Gd,Nd,yd,Wd});end;end));uw(a7[Bw],a7[Bw+0X0001],a7[Bw+0X0002]);x7=Bw;(a7)[Bw]=uw;W7=NG[3];else a7[NG[0X1]]=NG[0X04];end;end;end;end;else do if not(RG>=0XB)then do if RG~=10 then local mA=Vl[NG[0X3]];(a7)[NG[0X1]]=mA[1][mA[2]];W7=W7+0X001;do W7=W7+0X1;end;NG=pl[W7];W7=W7+1;do a7[NG[1]]=a7[0X00][NG[0X007]];end;W7=W7+0X1;do W7=W7+0X00001;end;NG=pl[W7];W7=W7+1;if a7[0]~=NG[0X7]then do W7=NG[0x01];end;end;else do(a7)[NG[0x1]]=v(a7[NG[0X3]]);end;end;end;else if RG~=0X0000C then a7[NG[0X1]]=A7[NG[4]];else local BM=(Vl[1]);a7[0X0]=BM[1][BM[0X2]];W7=W7+1;do W7=W7+0X1;end;do NG=pl[W7];end;W7=W7+0X1;local LM=(NG[0x00001]);local dM=a7[NG[0X3]];do(a7)[LM+0X1]=dM;end;(a7)[LM]=dM[NG[7]];NG=pl[W7];W7=W7+0X1;(a7)[2]=NG[4];W7=W7+0X1;LM=0;do a7[LM]=a7[LM](a7[LM+0X1],a7[LM+2]);end;do x7=LM;end;W7=W7+1;W7=W7+0X1;do NG=pl[W7];end;W7=W7+1;BM=Vl[NG[3]];(a7)[0X1]=BM[1][BM[2]];W7=W7+1;W7=W7+1;do NG=pl[W7];end;W7=W7+0X1;a7[1]=a7[1][NG[7]];NG=pl[W7];W7=W7+0x001;(a7[NG[0X1]])[NG[4]]=a7[0X0001];end;end;end;end;end;end;end;end);if B7 then if b7 then if N7~=1 then do return a7[i7](T(a7,i7+0X0001,x7));end;else return a7[i7]();end;elseif i7 then return T(a7,i7,N7);end;else if f(b7)=="string"then if not(C(b7,"att\101m\pt\032\116o\ \121\i\e\l\d\ \097\cro\s\s\ \m\et\097\met\104\od\/\C\%\-ca\l\l\032\098o\117n\d\097\114\y"))then else return coroutine.yield();end;do if not(C(b7,"^.-:%d+: "))then(d)(b7,0);else(d)('\076ur\097\p\104\ \S\099ri\p\116\058'..(Tl[W7-0x001]or"(internal)")..'\: '..x(b7),0x0000);end;end;else d(b7,0x0);end;end;end;end;else rl=function(...)local SG,BG=1,{};local PG=(k());local GG,hG=0X0,(PG==Q and jl or PG);local YG,ZG=qL(...);local HG=({[2]=BG,[1]=Sl});YG=YG-1;for tu=0X0,YG do if not(Wl>tu)then break;else BG[tu]=ZG[tu+0X1];end;end;if not el then do ZG=nil;end;elseif not(al)then else(BG)[Wl]={n=YG>=Wl and YG-Wl+0X1 or 0x0,T(ZG,Wl+0X0001,YG+0X00001)};end;if hG==PG then else E(rl,hG);end;local DG,cG,tG,MG=c(function()while true do local LJ=(pl[SG]);local jJ=LJ[0x6];do SG=SG+0x1;end;if jJ<0X00007 then if not(jJ<0X03)then if not(jJ<5)then if jJ~=6 then(BG)[LJ[1]]={T({},0X1,LJ[3])};else(BG)[LJ[1]]=hG[LJ[4]];end;else do if jJ~=4 then BG[LJ[1]]=BG[LJ[3]]<BG[LJ[2]];else(BG)[LJ[0X1]]=Z(BG[LJ[0X03]],BG[LJ[0x2]]);end;end;end;else do if not(jJ<0X1)then if jJ==2 then local cp=LJ[0x003];local zp=BG[cp];for LQ=cp+0x1,LJ[2]do zp=zp..BG[LQ];end;BG[LJ[0X00001]]=zp;else local jC=(kl[LJ[3]]);local wC=nil;local WC=(jC[8]);local DC=(#WC);do if DC>0X0000 then wC={};for fi=0X00001,DC do local Ni=WC[fi];do if Ni[0x0001]==0 then wC[fi-1]={BG,Ni[2]};else do(wC)[fi-0X1]=Vl[Ni[0x2]];end;end;end;end;h(ol,wC);end;end;(BG)[LJ[1]]=dL(wC,hG,jC);end;else local mo=(LJ[0x001]);local to=(LJ[0X3]);local Eo=LJ[0x2];if to==0X000 then else GG=mo+to-1;end;local xo,Bo=nil,nil;if to==1 then xo,Bo=qL(BG[mo]());else do xo,Bo=qL(BG[mo](T(BG,mo+0X1,GG)));end;end;if Eo==0X01 then GG=mo-0X00001;else if Eo==0x0 then xo=xo+mo-1;GG=xo;else do xo=mo+Eo-0x2;end;GG=xo+0X1;end;local FH=(0);for QM=mo,xo do FH=FH+1;BG[QM]=Bo[FH];end;end;end;end;end;else if jJ<0xA then if jJ>=0x00008 then if jJ==0x9 then BG[LJ[0x0001]]=LJ[4];else if not(BG[LJ[0X003]]<BG[LJ[2]])then SG=LJ[1];end;end;else local VL=(Vl[0x0]);BG[0X0]=VL[1][VL[0X02]];SG=SG+1;do SG=SG+0X1;end;LJ=pl[SG];local wL=BG[0];SG=SG+1;local vL=nil;local lL=LJ[0X001];(BG)[lL+0x1]=wL;(BG)[lL]=wL[LJ[7]];LJ=pl[SG];do SG=SG+0X00001;end;do BG[2]=LJ[0X0004];end;SG=SG+1;lL=0;BG[lL]=BG[lL](BG[lL+1],BG[lL+0X02]);do GG=lL;end;LJ=pl[SG];do SG=SG+0X1;end;BG[LJ[0X0001]]=BG[LJ[0x3]][LJ[7]];LJ=pl[SG];do SG=SG+1;end;lL=0X0;do wL=BG[0X00000];end;BG[lL+0x1]=wL;(BG)[lL]=wL[LJ[0X7]];do LJ=pl[SG];end;SG=SG+0X1;local WL=(kl[LJ[0X3]]);local DL=(WL[0X8]);local HL=#DL;if HL>0X0 then vL={};do for ca=1,HL do local qa=DL[ca];if qa[0X1]~=0X0 then(vL)[ca-1]=Vl[qa[0x0002]];else(vL)[ca-1]={BG,qa[0x2]};end;end;end;(h)(ol,vL);end;(BG)[LJ[1]]=dL(vL,hG,WL);LJ=pl[SG];SG=SG+1;lL=LJ[1];BG[lL](BG[lL+1],BG[lL+0X2]);GG=lL-1;SG=SG+1;repeat local tu,Uu=ol,BG;if#tu>0X0 then local sa={};do for Am,Tm in R,tu do for Uc,Vc in R,Tm do do if Vc[0X0001]==Uu and Vc[0X2]>=0 then local rr=Vc[0x2];if not sa[rr]then sa[rr]={Uu[rr]};end;(Vc)[0x01]=sa[rr];(Vc)[2]=1;end;end;end;end;end;end;until true;do return;end;end;else do if not(jJ>=12)then if jJ~=11 then else local Rt=(LJ[1]);do for WS=Rt,Rt+(LJ[3]-0x1)do BG[WS]=ZG[Wl+(WS-Rt)+0X01];end;end;end;else do if jJ~=13 then BG[LJ[1]]=BG[LJ[0X00003]]==BG[LJ[0x2]];else SG=LJ[3];end;end;end;end;end;end;end;end);do if not(DG)then do if f(cG)~='\strin\g'then(d)(cG,0X00);else if C(cG,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if not(C(cG,"^.-:%d+: "))then d(cG,0);else(d)('\Lur\097\p\h\032\S\099ript\:'..(Tl[SG-0X001]or"(internal)")..": "..x(cG),0X000);end;end;end;else if cG then if MG==0X0001 then return BG[tG]();else return BG[tG](T(BG,tG+1,GG));end;elseif tG then return T(BG,tG,MG);end;end;end;end;end;else if Ql>=0X00013 then if Ql==20 then rl=function(...)local WI=1;local YI=({});local vI=k();local eI={[1]=Sl,[2]=YI};local fI,yI=qL(...);local tI=((vI==Q and jl or vI));do fI=fI-0X1;end;for Nc=0,fI do do if Wl>Nc then(YI)[Nc]=yI[Nc+0x01];else break;end;end;end;if not el then do yI=nil;end;elseif not(al)then else do(YI)[Wl]={n=fI>=Wl and fI-Wl+1 or 0X0,T(yI,Wl+1,fI+1)};end;end;local JI=(0);if tI==vI then else E(rl,tI);end;local OI,LI,UI,rI=c(function()while true do local jK=pl[WI];local fK=jK[0X06];WI=WI+1;if fK>=0Xb then do if not(fK<0x0010)then if not(fK>=0X013)then do if not(fK>=17)then(YI)[jK[1]]=jK[4];else if fK~=0x12 then YI[jK[0X1]]=tI[jK[0X4]];else do(YI)[jK[0X1]]=YI[jK[3]]>=YI[jK[2]];end;end;end;end;else if not(fK>=0X14)then else do if fK==0x15 then(YI)[jK[0X1]]={T({},0X1,jK[3])};else do repeat local Vj,vj=ol,YI;if#Vj>0X00000 then local QH=({});for sQ,kQ in R,Vj do for S4,u4 in R,kQ do if u4[1]==vj and u4[2]>=0 then local pp=(u4[2]);if not(not QH[pp])then else(QH)[pp]={vj[pp]};end;(u4)[0X1]=QH[pp];u4[2]=0X1;end;end;end;end;until true;end;return;end;end;end;end;else do if not(fK>=13)then do if fK==12 then do(YI)[jK[1]]=v(YI[jK[3]]);end;else local zA=Vl[1];(YI)[0X0]=zA[0X00001][zA[0X2]];do jK=pl[WI];end;WI=WI+1;do zA=Vl[jK[0X3]];end;YI[jK[0X1]]=zA[0X1][zA[2]];jK=pl[WI];WI=WI+1;YI[1]=YI[jK[3]][jK[0x7]];do jK=pl[WI];end;WI=WI+1;do(YI[jK[1]])[jK[4]]=YI[1];end;jK=pl[WI];WI=WI+1;zA=Vl[0X1];(YI)[jK[0X1]]=zA[1][zA[2]];WI=WI+0X1;zA=Vl[0];YI[0X01]=zA[1][zA[0X2]];WI=WI+1;do WI=WI+0X1;end;jK=pl[WI];do WI=WI+0X01;end;do YI[jK[0x1]]=YI[jK[3]][jK[7]];end;do jK=pl[WI];end;do WI=WI+0X01;end;YI[0][jK[0X04]]=YI[jK[0X2]];WI=WI+1;zA=Vl[0X1];YI[0]=zA[1][zA[2]];WI=WI+1;do zA=Vl[0x0];end;do YI[1]=zA[1][zA[0X2]];end;do jK=pl[WI];end;do WI=WI+1;end;(YI)[jK[0X1]]=YI[0x1][jK[0X7]];do WI=WI+0x1;end;WI=WI+1;jK=pl[WI];do WI=WI+1;end;(YI[jK[1]])[jK[4]]=YI[0x00001];jK=pl[WI];do WI=WI+1;end;do WI=jK[0X3];end;end;end;else if not(fK>=0XE)then if not(not(YI[jK[3]]<=YI[jK[2]]))then else WI=jK[0X1];end;else if fK~=15 then if not YI[jK[1]]then WI=jK[0X3];end;else local BD=(kl[jK[0X3]]);local nD,bD=BD[8],nil;local QD=#nD;if not(QD>0X0000)then else do bD={};end;for I4=0X1,QD do local J4=nD[I4];if J4[0X1]~=0 then do bD[I4-0X00001]=Vl[J4[2]];end;else(bD)[I4-0X0001]={YI,J4[0x2]};end;end;(h)(ol,bD);end;(YI)[jK[0X1]]=dL(bD,tI,BD);end;end;end;end;end;end;else if fK<5 then if fK>=0x2 then if fK>=3 then do if fK~=4 then local p2=Vl[jK[3]];do YI[0]=p2[0x1][p2[0X2]];end;WI=WI+0X00001;WI=WI+0X01;WI=WI+1;do p2=Vl[0];end;YI[0x01]=p2[0X1][p2[0X0002]];jK=pl[WI];WI=WI+0X1;YI[jK[1]]=YI[0x1][jK[0x07]];jK=pl[WI];WI=WI+0x01;YI[0][jK[0X4]]=YI[1];do jK=pl[WI];end;WI=WI+0X1;WI=jK[3];else local Oy=(YI[jK[3]]/YI[jK[0x2]]);(YI)[jK[1]]=Oy-Oy%0X1;end;end;else YI[jK[1]]=YI[jK[3]];end;else if fK==0X1 then local pE=(Vl[0x0]);(YI)[jK[0X1]]=pE[0x001][pE[0x2]];do jK=pl[WI];end;WI=WI+0x1;(YI)[jK[0X1]]=YI[jK[3]][jK[7]];WI=WI+1;WI=WI+0X01;jK=pl[WI];WI=WI+1;do if YI[0]~=jK[7]then WI=jK[0X1];end;end;else YI[jK[0X1]][YI[jK[3]]]=YI[jK[2]];end;end;else if fK>=8 then do if not(fK>=9)then repeat local s6,C6,l6=ol,YI,jK[1];if#s6>0 then local xV={};for sx,Ox in R,s6 do do for v9,y9 in R,Ox do do if y9[0X1]==C6 and y9[2]>=l6 then local B4=(y9[0X002]);if not(not xV[B4])then else xV[B4]={C6[B4]};end;do(y9)[1]=xV[B4];end;y9[0X002]=1;end;end;end;end;end;end;until true;else if fK~=10 then WI=jK[3];else local Nl=(Vl[jK[3]]);YI[jK[0X0001]]=Nl[1][Nl[0X2]];jK=pl[WI];WI=WI+1;do(YI)[0]=YI[0X0][jK[7]];end;do WI=WI+1;end;do WI=WI+1;end;do jK=pl[WI];end;WI=WI+0x01;if YI[jK[3]]==jK[0X7]then else do WI=jK[0X00001];end;end;end;end;end;else if fK<0X6 then do for zc=jK[1],jK[3]do(YI)[zc]=nil;end;end;else if fK~=7 then local H_=jK[1];local l_,z_=YI[H_]();if not(l_)then else WI=jK[0X3];(YI)[H_+0X3]=z_;end;else local CB=Vl[jK[0X3]];(YI)[0x00]=CB[1][CB[2]];do jK=pl[WI];end;do WI=WI+0x1;end;YI[jK[0X1]]=YI[0X0][jK[0X0007]];WI=WI+0X1;do WI=WI+1;end;jK=pl[WI];WI=WI+1;if YI[jK[3]]~=jK[0X7]then WI=jK[1];end;end;end;end;end;end;end;end);do if not(OI)then if f(LI)=="string"then if C(LI,"a\116t\101\109\pt \116\o y\i\e\ld\032acr\o\ss\ \m\101t\097\109\et\h\o\100/\C%\-\ca\l\l\ \098\ou\110dary")then return coroutine.yield();end;if C(LI,"^.-:%d+: ")then(d)("Luraph Script:"..(Tl[WI-0x1]or'\(\105n\116\erna\l\)')..":\ "..x(LI),0);else(d)(LI,0x000);end;else d(LI,0);end;else if LI then if rI==1 then return YI[UI]();else return YI[UI](T(YI,UI+0X1,JI));end;elseif UI then return T(YI,UI,rI);end;end;end;end;else rl=function(...)local OL,lL=0,({});local VL=(k());local WL,wL={[2]=lL,[1]=Sl},((VL==Q and jl or VL));local DL,HL=qL(...);DL=DL-0X00001;local ZL=0X01;do for uH=0,DL do if Wl>uH then do(lL)[uH]=HL[uH+0X001];end;else break;end;end;end;if not el then HL=nil;elseif al then do(lL)[Wl]={n=DL>=Wl and DL-Wl+1 or 0,T(HL,Wl+0x0001,DL+0X00001)};end;end;if wL==VL then else E(rl,wL);end;local vL,kw,tw,rw=c(function()do while true do local GY=(pl[ZL]);local aY=GY[0X006];do ZL=ZL+1;end;if not(aY>=0X6)then do if not(aY<0X3)then if not(aY>=4)then local J2=kl[GY[0x3]];local Q2=J2[8];local F2,i2=#Q2,nil;do if not(F2>0X00000)then else i2={};do for GC=0X0001,F2 do local OC=Q2[GC];do if OC[1]~=0 then i2[GC-0x0001]=Vl[OC[0X0002]];else do i2[GC-0X1]={lL,OC[2]};end;end;end;end;end;h(ol,i2);end;end;(lL)[GY[0X1]]=dL(i2,wL,J2);else if aY~=5 then do if not(lL[GY[1]])then else ZL=GY[3];end;end;else do for FW=GY[0X1],GY[3]do do lL[FW]=nil;end;end;end;end;end;else if aY<0X1 then ZL=GY[0X00003];else if aY==2 then else(lL)[GY[1]]=lL[GY[3]]/lL[GY[2]];end;end;end;end;else do if not(aY<0x9)then if not(aY>=11)then if aY==0X0a then do lL[GY[1]]=lL[GY[3]][lL[GY[0X002]]];end;else local ie=(Vl[0]);(lL)[GY[0X1]]=ie[1][ie[0X2]];local Re=(nil);GY=pl[ZL];do ZL=ZL+0X01;end;lL[0]=lL[GY[3]][GY[0x7]];do GY=pl[ZL];end;ZL=ZL+1;local De,Ue=0,(lL[0X0]);(lL)[De+1]=Ue;lL[De]=Ue[GY[7]];GY=pl[ZL];ZL=ZL+0X1;local Le=kl[GY[0X0003]];local ke=Le[0X8];local Te=(#ke);if not(Te>0x0000)then else Re={};do for mo=1,Te do local co=(ke[mo]);if co[0x1]==0 then Re[mo-1]={lL,co[0x2]};else do Re[mo-0X1]=Vl[co[0X2]];end;end;end;end;(h)(ol,Re);end;(lL)[GY[1]]=dL(Re,wL,Le);ZL=ZL+1;do De=0;end;lL[De](lL[De+0X01],lL[De+2]);OL=De-0X01;ZL=ZL+0X1;ZL=ZL+0X01;ZL=ZL+0X1;repeat local QP,JP=ol,lL;if not(#QP>0)then else local Dk={};for Nn,Sn in R,QP do for BI,fI in R,Sn do if fI[1]==JP and fI[2]>=0 then local ud=fI[0X02];do if not Dk[ud]then do Dk[ud]={JP[ud]};end;end;end;do fI[0X1]=Dk[ud];end;do(fI)[2]=0X0001;end;end;end;end;end;until true;return;end;else if aY~=12 then WL[GY[0X3]]=lL[GY[1]];else(lL)[GY[1]]=wL[GY[4]];end;end;else if not(aY>=0X7)then(lL)[GY[0X1]]=lL[GY[3]]-lL[GY[2]];else do if aY~=8 then lL[GY[0x1]]=GY[4];else do lL[GY[0X1]]={T({},0X0001,GY[0X00003])};end;end;end;end;end;end;end;end;end;end);if vL then if kw then if rw==0X1 then return lL[tw]();else do return lL[tw](T(lL,tw+0X001,OL));end;end;elseif not(tw)then else return T(lL,tw,rw);end;else if f(kw)~='\s\116rin\g'then d(kw,0X0);else do if not(C(kw,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(C(kw,'^\.\-:\%\d\043\: '))then(d)(kw,0X0);else d("\076\117\114\097\p\h\ \Sc\114\i\p\116\:"..(Tl[ZL-1]or"(internal)")..": "..x(kw),0);end;end;end;end;end;else rl=function(...)local vL=(1);local HL={};local VL=k();local ZL,lL=qL(...);local WL,DL=0,(VL==Q and jl or VL);local wL=({[2]=HL,[1]=Sl});ZL=ZL-1;for U0=0X000,ZL do if Wl>U0 then HL[U0]=lL[U0+1];else do break;end;end;end;if not el then lL=nil;elseif not(al)then else HL[Wl]={n=ZL>=Wl and ZL-Wl+0X1 or 0X0,T(lL,Wl+0x1,ZL+0x1)};end;do if DL==VL then else E(rl,DL);end;end;local OL,ua,oa,La=c(function()while true do local Nj=(pl[vL]);local Lj=(Nj[6]);vL=vL+0X00001;if Lj<0Xb then if Lj>=0X5 then if Lj>=8 then if Lj<0X9 then local lK=Vl[Nj[3]];(HL)[0X00000]=lK[1][lK[0X002]];Nj=pl[vL];do vL=vL+0x01;end;WL=Nj[0x0001];HL[WL]();WL=WL-0X1;vL=vL+1;do vL=vL+1;end;Nj=pl[vL];vL=vL+0X1;vL=Nj[3];else if Lj~=0XA then do HL[Nj[1]]=DL[Nj[4]];end;else local AE=Vl[0];(HL)[Nj[0X1]]=AE[1][AE[0x2]];Nj=pl[vL];vL=vL+1;do HL[0X00001]=HL[Nj[3]][Nj[7]];end;vL=vL+1;vL=vL+1;Nj=pl[vL];do vL=vL+1;end;AE=Vl[Nj[0X003]];HL[2]=AE[1][AE[2]];vL=vL+0X01;do vL=vL+0X1;end;do Nj=pl[vL];end;do vL=vL+1;end;HL[0x2]=HL[Nj[0X3]][Nj[0x0007]];Nj=pl[vL];vL=vL+1;if not(HL[0X00002]<=HL[1])then vL=Nj[1];end;end;end;else do if not(Lj>=0X06)then do(HL)[Nj[1]]=wL[Nj[0X3]];end;else if Lj~=7 then else local by=(kl[Nj[3]]);local xy,Cy=by[0X8],(nil);local Ky=#xy;if Ky>0 then do Cy={};end;do for lU=0X1,Ky do local jU=(xy[lU]);do if jU[0x1]==0X0000 then Cy[lU-0X1]={HL,jU[0X00002]};else do Cy[lU-0X1]=Vl[jU[0X2]];end;end;end;end;end;(h)(ol,Cy);end;HL[Nj[0x1]]=dL(Cy,DL,by);end;end;end;end;else if Lj>=2 then do if not(Lj>=0X3)then(HL)[Nj[0X1]]={T({},0X1,Nj[3])};else if Lj==0X4 then local U8=Vl[0X01];do HL[Nj[1]]=U8[1][U8[0X2]];end;vL=vL+1;vL=vL+1;Nj=pl[vL];vL=vL+1;HL[Nj[0x00001]]=HL[Nj[0X3]][Nj[0X7]];vL=vL+1;vL=vL+1;Nj=pl[vL];vL=vL+1;do if HL[Nj[0X3]]==Nj[0X7]then else vL=Nj[0X1];end;end;else HL[0]=DL[Nj[0x04]];do vL=vL+1;end;vL=vL+1;vL=vL+0x1;local f3=(Vl[3]);WL=0X00000;HL[WL]();WL=WL-1;vL=vL+1;HL[0X0]=f3[1][f3[0X02]];vL=vL+0X01;vL=vL+0X1;vL=vL+0x1;WL=0x00;(HL[WL])();WL=WL-0X00001;Nj=pl[vL];do vL=vL+1;end;f3=Vl[Nj[0X00003]];do HL[0]=f3[1][f3[0X0002]];end;vL=vL+1;vL=vL+1;do Nj=pl[vL];end;vL=vL+0X001;do HL[0]=HL[0][Nj[7]];end;do vL=vL+0X1;end;vL=vL+0X01;Nj=pl[vL];do vL=vL+0X1;end;if not(HL[Nj[0X3]]<Nj[7])then else vL=Nj[0X01];end;end;end;end;else if Lj==0X001 then repeat local c6,d6=ol,HL;do if not(#c6>0)then else local Hw=({});for To,So in R,c6 do do for WI,kI in R,So do do if not(kI[1]==d6 and kI[0x2]>=0)then else local kn=(kI[0X0002]);if not Hw[kn]then do Hw[kn]={d6[kn]};end;end;(kI)[1]=Hw[kn];(kI)[2]=1;end;end;end;end;end;end;end;until true;return;else local l6=Vl[Nj[0x03]];(HL)[Nj[0x1]]=l6[0X00001][l6[2]];vL=vL+1;do vL=vL+1;end;do Nj=pl[vL];end;vL=vL+1;do HL[1]=HL[Nj[3]][Nj[0X7]];end;do vL=vL+1;end;vL=vL+1;do Nj=pl[vL];end;do vL=vL+0x1;end;l6=Vl[Nj[3]];HL[Nj[1]]=l6[0X1][l6[2]];Nj=pl[vL];vL=vL+1;(HL)[Nj[0X00001]]=HL[Nj[3]][Nj[0X7]];Nj=pl[vL];vL=vL+1;if not(not(HL[1]<=HL[Nj[0X2]]))then else vL=Nj[1];end;end;end;end;else if Lj<0X010 then do if not(Lj>=0Xd)then do if Lj==0xc then local bg=HL[Nj[0X3]]/HL[Nj[0x02]];HL[Nj[1]]=bg-bg%0X1;else local wv=Vl[Nj[0X03]];do HL[0x003]=wv[1][wv[0X02]];end;vL=vL+0X1;vL=vL+0X1;Nj=pl[vL];vL=vL+1;do(HL)[0X03]=HL[Nj[0X3]][Nj[0X7]];end;Nj=pl[vL];vL=vL+0X00001;if HL[0X3]~=Nj[7]then do vL=Nj[0x1];end;end;end;end;else if not(Lj>=0xE)then vL=Nj[3];else if Lj==15 then if not(not(HL[Nj[3]]<HL[Nj[2]]))then else do vL=Nj[0X1];end;end;else(HL)[Nj[1]]=Nj[0x00004];end;end;end;end;else do if Lj>=19 then if not(Lj<0X014)then if Lj~=21 then local IV=Vl[Nj[3]];HL[Nj[0x1]]=IV[0X1][IV[2]];vL=vL+0X001;do vL=vL+1;end;Nj=pl[vL];vL=vL+1;(HL)[0X0001]=HL[Nj[0x3]][Nj[0X0007]];Nj=pl[vL];vL=vL+1;if HL[Nj[0X03]]==Nj[7]then else vL=Nj[1];end;else local gO=Vl[1];HL[2]=gO[1][gO[0x2]];Nj=pl[vL];do vL=vL+1;end;HL[Nj[0x1]]=HL[0X2][Nj[0X007]];Nj=pl[vL];do vL=vL+0X1;end;if HL[Nj[0X003]]~=Nj[7]then vL=Nj[0x01];end;end;else HL[Nj[1]]=HL[Nj[0X003]]>HL[Nj[0X2]];end;else if Lj>=17 then if Lj~=0X12 then for TS=Nj[0X01],Nj[3]do HL[TS]=nil;end;else local w3=(Vl[Nj[3]]);HL[Nj[1]]=w3[1][w3[0X002]];Nj=pl[vL];vL=vL+0X001;(HL)[Nj[1]]=HL[Nj[0X003]][Nj[0x7]];do Nj=pl[vL];end;do vL=vL+0X1;end;do if not(not(HL[0]<Nj[7]))then else vL=Nj[1];end;end;end;else local lC,gC=Nj[0X0001],Nj[3];do if gC~=0 then WL=lC+gC-1;end;end;local mC,RC=nil,(nil);local IC=(Nj[2]);if gC==1 then do mC,RC=qL(HL[lC]());end;else mC,RC=qL(HL[lC](T(HL,lC+1,WL)));end;if IC==1 then WL=lC-0x1;else do if IC==0 then mC=mC+lC-1;WL=mC;else mC=lC+IC-0X002;WL=mC+0X1;end;end;local nn=0X0;do for XW=lC,mC do nn=nn+0X00001;(HL)[XW]=RC[nn];end;end;end;end;end;end;end;end;end;end);if not(OL)then do if f(ua)=="\115t\114\105n\g"then if not(C(ua,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(C(ua,'^.\-\:\037\d\043\:\ '))then d(ua,0x0000);else(d)('\076\117raph \Sc\114i\pt\058'..(Tl[vL-0X1]or"\(\i\110\116\er\110\097\l)")..':\ '..x(ua),0);end;else(d)(ua,0);end;end;else do if ua then if La~=0X1 then return HL[oa](T(HL,oa+0X1,WL));else return HL[oa]();end;elseif oa then return T(HL,oa,La);end;end;end;end;end;end;else if Ql<0Xc then if Ql==11 then rl=function(...)local Ft=1;local kt=({});local At=k();local bt,Ht={[1]=Sl,[2]=kt},(At==Q and jl or At);local Ct,St=qL(...);Ct=Ct-0X001;for fs=0X0,Ct do if not(Wl>fs)then break;else(kt)[fs]=St[fs+1];end;end;local rt=0X00000;if not el then St=nil;elseif not(al)then else(kt)[Wl]={n=Ct>=Wl and Ct-Wl+0x00001 or 0,T(St,Wl+1,Ct+0X00001)};end;if Ht~=At then(E)(rl,Ht);end;local Bt,Gt,Kt,ht=c(function()do while true do local Ov=pl[Ft];local tv=Ov[6];do Ft=Ft+0x1;end;if tv<0x7 then if tv<0x03 then if not(tv<1)then do if tv~=2 then Ft=Ov[3];else repeat local fW,tW,NW=ol,kt,(Ov[0x1]);if not(#fW>0x0)then else local ZA={};for gg,Cg in R,fW do for M8,H8 in R,Cg do if not(H8[0X1]==tW and H8[0x2]>=NW)then else local T3=H8[0x2];if not(not ZA[T3])then else do(ZA)[T3]={tW[T3]};end;end;H8[0X001]=ZA[T3];(H8)[2]=1;end;end;end;end;until true;end;end;else local ba=Vl[Ov[3]];(kt)[0]=ba[0X1][ba[2]];Ov=pl[Ft];do Ft=Ft+1;end;local na=(0x0000);do kt[Ov[0X0001]]=kt[0x0][Ov[7]];end;Ov=pl[Ft];Ft=Ft+1;local ma=kt[Ov[3]];do kt[na+0X1]=ma;end;do kt[na]=ma[Ov[0X7]];end;Ov=pl[Ft];do Ft=Ft+1;end;do ba=Vl[Ov[3]];end;kt[Ov[0X1]]=ba[1][ba[0x2]];do Ft=Ft+0X0001;end;Ft=Ft+0X1;Ov=pl[Ft];Ft=Ft+1;na=Ov[0x1];do(kt)[na]=kt[na](kt[na+1],kt[na+0X2]);end;do rt=na;end;Ft=Ft+1;Ft=Ft+0X1;Ov=pl[Ft];do Ft=Ft+1;end;ba=Vl[Ov[3]];ba[0X1][ba[2]]=kt[0X000];Ft=Ft+0X1;do repeat local iJ,zJ=ol,(kt);do if not(#iJ>0X0)then else local ep={};for E7,Y7 in R,iJ do for zI,eI in R,Y7 do if not(eI[0X0001]==zJ and eI[2]>=0X0)then else local n6=(eI[0X2]);if not ep[n6]then do ep[n6]={zJ[n6]};end;end;(eI)[0X0001]=ep[n6];eI[0X0002]=1;end;end;end;end;end;until true;end;return;end;else do if tv<5 then if tv~=4 then local On=(Ov[1]);local Pn,Zn,Bn=kt[On],kt[On+0X1],(kt[On+0X2]);kt[On]=b(function()for aw=Pn,Zn,Bn do K(true,aw);end;end);Ft=Ov[3];else kt[Ov[1]]=kt[Ov[0X0003]]~=kt[Ov[0X002]];end;else do if tv==0x6 then(kt)[Ov[1]]={T({},1,Ov[0x3])};else do kt[Ov[1]]=Ht[Ov[0x04]];end;end;end;end;end;end;else do if not(tv<11)then if tv<0XD then if tv~=0XC then(kt)[Ov[0x1]]=kt[Ov[0x3]]>kt[Ov[0X2]];else local Zp=(kt[Ov[0x3]]/kt[Ov[2]]);kt[Ov[0X00001]]=Zp-Zp%0X0001;end;else if tv==14 then else for GZ=Ov[1],Ov[0x3]do kt[GZ]=nil;end;end;end;else if tv>=9 then if tv==0xa then(kt)[Ov[0X1]]=Z(kt[Ov[0X003]],kt[Ov[2]]);else local nB=(kl[Ov[3]]);local GB,hB=nB[8],nil;local XB=(#GB);do if XB>0 then hB={};for cm=1,XB do local ym=GB[cm];do if ym[0X1]~=0X000 then hB[cm-1]=Vl[ym[0x2]];else(hB)[cm-0X1]={kt,ym[0X0002]};end;end;end;h(ol,hB);end;end;do kt[Ov[1]]=dL(hB,Ht,nB);end;end;else do if tv~=8 then(kt)[Ov[1]]=-kt[Ov[3]];else kt[Ov[0x1]]=Ov[4];end;end;end;end;end;end;end;end;end);if not(Bt)then if f(Gt)~="\s\116r\105ng"then(d)(Gt,0);else do if C(Gt,'\097t\116\e\109p\116\ \116\o\032\y\i\101\l\100 a\099\114\oss\ \109\101\116\097\m\e\116\104\o\d\047\C\%\-ca\108l\032\098\o\117\110\100\097\114\y')then return coroutine.yield();end;end;if not(C(Gt,"^.-:%d+: "))then(d)(Gt,0);else(d)("Luraph Script:"..(Tl[Ft-0x00001]or"(internal)")..'\:\032'..x(Gt),0);end;end;else if Gt then if ht~=1 then return kt[Kt](T(kt,Kt+1,rt));else do return kt[Kt]();end;end;elseif Kt then return T(kt,Kt,ht);end;end;end;else do rl=function(...)local WM=1;local HM=(0X0);local uM={};local cM=k();local tM={[2]=uM,[1]=Sl};local SM=(cM==Q and jl or cM);local MM,nM=qL(...);do MM=MM-0X1;end;do for Ed=0,MM do if not(Wl>Ed)then break;else uM[Ed]=nM[Ed+1];end;end;end;do if not el then nM=nil;elseif al then(uM)[Wl]={n=MM>=Wl and MM-Wl+0X0001 or 0x0,T(nM,Wl+1,MM+0X1)};end;end;if SM==cM then else(E)(rl,SM);end;local sM,rM,dM,jM=c(function()while true do local sj=(pl[WM]);local Xj=(sj[6]);do WM=WM+1;end;if not(Xj>=0X7)then if not(Xj<3)then if Xj<5 then if Xj==4 then uM[sj[1]]=uM[sj[0X03]]<uM[sj[2]];else uM[sj[0X1]]=uM[sj[0X3]][uM[sj[0x002]]];end;else if Xj~=0x6 then(uM)[sj[1]]=sj[0X004];else local ac=kl[sj[3]];local vc=ac[0x0008];local Nc,oc=#vc,(nil);if Nc>0 then oc={};for co=0x001,Nc do local Ro=vc[co];if Ro[1]==0 then oc[co-1]={uM,Ro[0X00002]};else do oc[co-1]=Vl[Ro[2]];end;end;end;(h)(ol,oc);end;uM[sj[1]]=dL(oc,SM,ac);end;end;else if Xj<0x1 then local qJ=(uM[sj[3]]/uM[sj[0X2]]);uM[sj[0X001]]=qJ-qJ%0X1;else if Xj~=2 then do uM[sj[0X0001]]={T({},1,sj[0X0003])};end;else WM=sj[3];end;end;end;else if Xj>=0Xa then if not(Xj>=12)then if Xj~=11 then(uM)[sj[0X1]]=sj[4];else(uM)[sj[0X1]]=uM[sj[3]]-uM[sj[0X2]];end;else if Xj~=0X000d then(uM)[0X0]=SM[sj[4]];sj=pl[WM];WM=WM+1;uM[sj[0X1]]=uM[0X0][sj[7]];sj=pl[WM];local y8=(nil);WM=WM+0X1;local H8=uM[0];local D8=(sj[0X00001]);uM[D8+1]=H8;uM[D8]=H8[sj[7]];sj=pl[WM];WM=WM+1;local w8=kl[sj[3]];local Q8=(w8[8]);local m8=(#Q8);if not(m8>0)then else y8={};do for sI=0X001,m8 do local jI=Q8[sI];if jI[0X0001]~=0X0 then(y8)[sI-1]=Vl[jI[2]];else(y8)[sI-0X01]={uM,jI[2]};end;end;end;(h)(ol,y8);end;do uM[0X2]=dL(y8,SM,w8);end;WM=WM+1;D8=0;uM[D8](uM[D8+0X01],uM[D8+0X2]);do HM=D8-1;end;do WM=WM+1;end;repeat local RM,TM=ol,uM;if not(#RM>0)then else local Um={};do for kF,DF in R,RM do do for VF,ZF in R,DF do if ZF[0X1]==TM and ZF[0X2]>=0x0 then local e7=ZF[2];if not(not Um[e7])then else(Um)[e7]={TM[e7]};end;ZF[1]=Um[e7];do(ZF)[0X2]=0X1;end;end;end;end;end;end;end;until true;return;else end;end;else if Xj<0x8 then uM[sj[0X001]]=SM[sj[4]];else if Xj==9 then do uM[sj[0X00001]]=uM[sj[0X0003]]+uM[sj[0x2]];end;else local Mq=sj[1];local Nq=uM[sj[0x003]];uM[Mq+1]=Nq;do uM[Mq]=Nq[sj[7]];end;end;end;end;end;end;end);if sM then if rM then do if jM~=1 then return uM[dM](T(uM,dM+0X1,HM));else return uM[dM]();end;end;elseif not(dM)then else return T(uM,dM,jM);end;else if f(rM)=="string"then if C(rM,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if C(rM,"^.-:%d+: ")then(d)("Luraph Script:"..(Tl[WM-1]or"(internal)")..": "..x(rM),0X0);else(d)(rM,0);end;else(d)(rM,0X0);end;end;end;end;end;else if Ql>=0X00D then if Ql==0Xe then do rl=function(...)local HR=({});local cR=0X1;local OR=(k());local oR={[2]=HR,[1]=Sl};local tR,SR=qL(...);do tR=tR-1;end;local MR,aR=0,(OR==Q and jl or OR);for cs=0X0000,tR do if Wl>cs then HR[cs]=SR[cs+1];else do break;end;end;end;do if not el then SR=nil;elseif al then HR[Wl]={n=tR>=Wl and tR-Wl+0X1 or 0,T(SR,Wl+0X001,tR+0X00001)};end;end;do if aR==OR then else(E)(rl,aR);end;end;local DR,IR,mR,gR=c(function()while true do local d1=pl[cR];local S1=(d1[6]);do cR=cR+1;end;if S1<8 then do if S1>=4 then if S1<6 then if S1~=0x05 then else for mx=d1[1],d1[0x3]do do(HR)[mx]=nil;end;end;end;else if S1~=0X7 then do(HR)[d1[1]]=y(HR[d1[3]],HR[d1[0x02]]);end;else do HR[0X0]={};end;do d1=pl[cR];end;local gN=0x00001;cR=cR+1;(HR[0X0])[d1[0X4]]=d1[7];do d1=pl[cR];end;cR=cR+0X001;(HR[d1[1]])[d1[4]]=d1[7];d1=pl[cR];do cR=cR+0x1;end;do HR[d1[1]]=aR[d1[4]];end;d1=pl[cR];cR=cR+1;local sN=HR[0X1];HR[gN+0X1]=sN;do(HR)[gN]=sN[d1[0x7]];end;do d1=pl[cR];end;do cR=cR+1;end;(HR)[0X03]=d1[0X00004];do d1=pl[cR];end;cR=cR+0X00001;gN=d1[1];HR[gN]=HR[gN](HR[gN+1],HR[gN+0X2]);MR=gN;d1=pl[cR];cR=cR+1;do(HR)[d1[1]]=HR[0X1][d1[7]];end;d1=pl[cR];do cR=cR+0X1;end;HR[1]=HR[d1[3]][d1[0X7]];do d1=pl[cR];end;cR=cR+0X1;do gN=d1[0X1];end;sN=HR[1];HR[gN+1]=sN;HR[gN]=sN[d1[7]];d1=pl[cR];cR=cR+0X1;(HR)[d1[0x00001]]=aR[d1[4]];cR=cR+0X1;cR=cR+0X1;cR=cR+1;do HR[0X4]=HR[0];end;do d1=pl[cR];end;local hN=(d1[3]);do cR=cR+0x01;end;gN=0X3;local oN=(0);do if hN~=0x0 then do MR=gN+hN-1;end;end;end;local yN,WN=nil,nil;if hN~=1 then yN,WN=qL(HR[gN](T(HR,gN+1,MR)));else yN,WN=qL(HR[gN]());end;if oN==1 then MR=gN-1;else if oN==0 then yN=yN+gN-1;MR=yN;else yN=gN+oN-0X0002;MR=yN+1;end;local NS=(0);for fd=gN,yN do NS=NS+0x1;HR[fd]=WN[NS];end;end;cR=cR+0X1;cR=cR+0X01;do d1=pl[cR];end;cR=cR+1;gN=d1[0X0001];HR[gN](T(HR,gN+0X0001,MR));MR=gN-0X01;d1=pl[cR];cR=cR+1;local mN=(Vl[d1[0X00003]]);(HR)[0X1]=mN[0x1][mN[0X00002]];d1=pl[cR];cR=cR+0X001;do(HR)[d1[1]]=HR[0x1][d1[0X07]];end;d1=pl[cR];cR=cR+0X1;if HR[1]==d1[7]then do cR=d1[1];end;end;end;end;else if S1>=0x02 then if S1~=0X3 then(HR)[d1[1]]=aR[d1[0X4]];else if HR[d1[3]]==HR[d1[0X002]]then else cR=d1[1];end;end;else if S1~=1 then cR=d1[3];else do(HR)[0]=aR[d1[4]];end;cR=cR+1;cR=cR+0x1;d1=pl[cR];do cR=cR+1;end;MR=d1[0X1];(HR)[MR]=HR[MR]();cR=cR+0X1;cR=cR+1;d1=pl[cR];do cR=cR+0X1;end;if not HR[0x0]then cR=d1[0X3];end;end;end;end;end;else if S1>=0Xc then if S1>=14 then do if not(S1>=15)then local tD=(kl[d1[0x00003]]);local uD=nil;local OD=(tD[8]);local YD=#OD;if not(YD>0)then else do uD={};end;for O1=1,YD do local n1=(OD[O1]);if n1[0X1]~=0x0 then uD[O1-1]=Vl[n1[0X02]];else uD[O1-0X00001]={HR,n1[2]};end;end;h(ol,uD);end;HR[d1[1]]=dL(uD,aR,tD);else if S1~=16 then(HR[d1[0X1]])[HR[d1[3]]]=HR[d1[2]];else do if not(HR[d1[3]]<=HR[d1[2]])then cR=d1[1];end;end;end;end;end;else if S1==13 then(HR)[d1[1]]=HR[d1[0X00003]]-HR[d1[2]];else(HR)[d1[1]]=HR[d1[0X3]]<HR[d1[2]];end;end;else if S1<0X0A then do if S1==9 then HR[d1[0X001]]=d1[0X04];else(HR)[d1[0X1]]={T({},0X1,d1[0x3])};end;end;else do if S1~=11 then HR[d1[0X00001]]=HR[d1[0X3]];else repeat local Fg,xg=ol,(HR);do if#Fg>0x0 then local JY=({});do for lA,FA in R,Fg do for De,se in R,FA do if not(se[0x0001]==xg and se[2]>=0X0)then else local yB=(se[2]);if not(not JY[yB])then else JY[yB]={xg[yB]};end;(se)[1]=JY[yB];do se[0X2]=1;end;end;end;end;end;end;end;until true;return;end;end;end;end;end;end;end);if not(DR)then if f(IR)~="\str\105n\103"then(d)(IR,0X0000);else if C(IR,'a\116t\101m\pt\ t\111\ \y\ie\108\d a\cr\os\s\ \109et\097\m\e\116\104\111d/\067\037\-\c\097\l\l\ \098\ou\110\d\097\114\y')then return coroutine.yield();end;do if C(IR,'\094\046-\:\%\d\043\058\032')then(d)("\Lu\114a\p\h\ \083\c\114\ip\116\:"..(Tl[cR-1]or'(i\110\116erna\108\)')..": "..x(IR),0X0);else d(IR,0);end;end;end;else if IR then do if gR~=0X0001 then return HR[mR](T(HR,mR+1,MR));else return HR[mR]();end;end;elseif mR then do return T(HR,mR,gR);end;end;end;end;end;else rl=function(...)local ac={};local yc=(1);local Mc=(0X0);local cc=k();local jc=((cc==Q and jl or cc));local Hc=({[1]=Sl,[2]=ac});local vc,nc=qL(...);vc=vc-1;for k6=0X0,vc do do if not(Wl>k6)then do break;end;else do(ac)[k6]=nc[k6+0X1];end;end;end;end;if not el then nc=nil;elseif al then do ac[Wl]={n=vc>=Wl and vc-Wl+1 or 0X0,T(nc,Wl+0x0001,vc+0X1)};end;end;if jc~=cc then(E)(rl,jc);end;local Kc,Tc,Zc,Ac=c(function()while true do local DL=pl[yc];local OL=DL[0X00006];yc=yc+0X00001;do if not(OL>=10)then do if OL<5 then do if not(OL<0X002)then do if OL>=0X00003 then if OL==4 then(ac)[DL[1]]={T({},1,DL[0X003])};else(ac)[DL[1]]=jc[DL[0x4]];end;else repeat local xG,UG=ol,(ac);if not(#xG>0X0)then else local F3={};for oy,ny in R,xG do for FD,nD in R,ny do do if nD[0X1]==UG and nD[2]>=0X0 then local uj=(nD[2]);if not F3[uj]then F3[uj]={UG[uj]};end;nD[1]=F3[uj];nD[2]=1;end;end;end;end;end;until true;do return;end;end;end;else if OL==0X1 then do repeat local lV,sV=ol,ac;if not(#lV>0X0)then else local Dc={};do for Ns,gs in R,lV do for dg,Qg in R,gs do do if not(Qg[0X001]==sV and Qg[2]>=0)then else local Ye=(Qg[2]);if not Dc[Ye]then do Dc[Ye]={sV[Ye]};end;end;(Qg)[0X00001]=Dc[Ye];(Qg)[2]=0X1;end;end;end;end;end;end;until true;end;do return false,DL[0X1],Mc;end;else yc=DL[0x00003];end;end;end;else if OL>=7 then do if not(OL<8)then if OL==9 then local lr=(DL[0X1]);for Td=lr,lr+(DL[3]-0x1)do do ac[Td]=nc[Wl+(Td-lr)+1];end;end;else local lq=(Vl[DL[3]]);ac[DL[0X1]]=lq[0X1][lq[2]];end;else local T5=kl[DL[0X3]];local h5=(T5[8]);local E5=#h5;local k5=nil;if E5>0X0 then do k5={};end;for fI=0X1,E5 do local GI=(h5[fI]);do if GI[0X00001]==0X0 then do k5[fI-1]={ac,GI[0X0002]};end;else(k5)[fI-0x1]=Vl[GI[0X02]];end;end;end;(h)(ol,k5);end;(ac)[DL[1]]=dL(k5,jc,T5);end;end;else if OL==0X06 then local dX=Vl[0X1];(ac)[DL[1]]=dX[0X00001][dX[0X2]];do yc=yc+0X01;end;yc=yc+1;DL=pl[yc];yc=yc+0x1;ac[DL[1]]=ac[0X4][DL[7]];DL=pl[yc];do yc=yc+0x00001;end;do if ac[4]==DL[7]then else do yc=DL[0x1];end;end;end;else local Nh=(Vl[0]);ac[DL[0X1]]=Nh[0X01][Nh[0X2]];do yc=yc+0X1;end;yc=yc+1;do DL=pl[yc];end;yc=yc+1;do if ac[DL[3]]~=ac[DL[2]]then do yc=DL[1];end;end;end;end;end;end;end;else if not(OL>=15)then if OL<12 then do if OL~=11 then if not(not(ac[DL[3]]<=ac[DL[2]]))then else yc=DL[1];end;else if not(ac[DL[3]]<=ac[DL[2]])then else yc=DL[0x1];end;end;end;else if not(OL<13)then if OL~=0X0000E then do if ac[DL[3]]~=DL[0x007]then else do yc=DL[0X1];end;end;end;else local sM=Vl[3];(ac)[2]=sM[0X1][sM[2]];yc=yc+1;do yc=yc+0X001;end;yc=yc+0x1;ac[0X3]=ac[0X0];DL=pl[yc];yc=yc+1;(ac)[DL[1]]=ac[0X00001];DL=pl[yc];yc=yc+0X00001;local oM=(DL[0X3]);local ZM=(DL[1]);do Mc=ZM+oM-1;end;repeat local ZL,WL=ol,ac;if not(#ZL>0X0)then else local Gu={};do for SM,yM in R,ZL do for Gc,Bc in R,yM do if not(Bc[1]==WL and Bc[2]>=0X00)then else local wz=Bc[0X2];if not(not Gu[wz])then else Gu[wz]={WL[wz]};end;do(Bc)[0X1]=Gu[wz];end;Bc[0X2]=1;end;end;end;end;end;until true;return true,ZM,oM;end;else local ZU=(Vl[DL[3]]);do(ac)[DL[0X1]]=ZU[0X1][ZU[2]];end;yc=yc+1;yc=yc+0X1;DL=pl[yc];yc=yc+1;repeat local ee,De=ol,(ac);if#ee>0 then local EY={};for po,no in R,ee do for Qt,Vt in R,no do do if Vt[1]==De and Vt[0X2]>=0 then local wW=(Vt[2]);do if not EY[wW]then(EY)[wW]={De[wW]};end;end;Vt[0X00001]=EY[wW];Vt[0X2]=0x1;end;end;end;end;end;until true;local kU=DL[0x00001];return false,kU,kU;end;end;else if not(OL<0x11)then do if OL>=18 then if OL==19 then(ac)[DL[0X1]]=ac[DL[3]]<=ac[DL[2]];else(ac)[DL[1]]=DL[4];end;else(ac)[DL[0x001]]=not ac[DL[3]];end;end;else do if OL~=0x00010 then if ac[DL[3]]~=DL[7]then yc=DL[0X1];end;else end;end;end;end;end;end;end;end);if not(Kc)then do if f(Tc)~="string"then(d)(Tc,0X0);else if C(Tc,'\097\116\116\e\109\112\116\ t\o\ \y\105e\ld\ \097\099\114os\115\032\109\eta\m\101t\104\111\d/\C%\-ca\l\108\ \098\o\117\110\d\097\114\y')then do return coroutine.yield();end;end;if not(C(Tc,"^.-:%d+: "))then d(Tc,0);else(d)("Luraph Script:"..(Tl[yc-0x01]or'(in\116\erna\l\)')..": "..x(Tc),0);end;end;end;else if Tc then if Ac~=0X01 then return ac[Zc](T(ac,Zc+0X1,Mc));else return ac[Zc]();end;elseif not(Zc)then else return T(ac,Zc,Ac);end;end;end;end;else rl=function(...)local sY,gY=1,({});local NY={[1]=Sl,[2]=gY};local BY=(k());local qY=(BY==Q and jl or BY);local SY,EY=qL(...);local XY=(0);SY=SY-0X1;for v5=0,SY do if Wl>v5 then do(gY)[v5]=EY[v5+0X1];end;else break;end;end;if not el then do EY=nil;end;elseif not(al)then else(gY)[Wl]={n=SY>=Wl and SY-Wl+1 or 0,T(EY,Wl+1,SY+0X00001)};end;if qY~=BY then E(rl,qY);end;local AY,GY,zY,KY=c(function()while true do local nh=pl[sY];local hh=nh[0X00006];sY=sY+1;do if hh>=0X7 then if hh<0XB then if hh<9 then if hh~=0X008 then(gY)[nh[1]]=gY[nh[3]]*gY[nh[0X0002]];else end;else if hh==10 then local Yo=(kl[nh[0X3]]);local Fo=Yo[0X8];local Lo=nil;local jo=#Fo;do if jo>0 then do Lo={};end;for z1=0X001,jo do local F1=Fo[z1];do if F1[1]==0X0 then do Lo[z1-0X0001]={gY,F1[0X02]};end;else Lo[z1-0X01]=Vl[F1[2]];end;end;end;(h)(ol,Lo);end;end;gY[nh[0X1]]=dL(Lo,qY,Yo);else if gY[nh[0X0003]]~=gY[nh[2]]then do sY=nh[0X001];end;end;end;end;else do if hh>=0X00D then if hh==0XE then(gY)[nh[0X1]]=nh[0x4];else local ZE=(nh[0X1]);local mE=gY[ZE+2];local dE=(gY[ZE+1]);local bE=(gY[ZE]);(gY)[ZE]=b(function()for N6=bE,dE,mE do K(true,N6);end;end);sY=nh[0X03];end;else if hh~=0xc then(gY)[nh[0x1]]=t(gY[nh[3]],gY[nh[2]]);else gY[nh[0X1]]=gY[nh[3]]%gY[nh[2]];end;end;end;end;else do if not(hh>=3)then do if hh>=0X00001 then if hh~=2 then gY[nh[1]]=not gY[nh[0X3]];else sY=nh[3];end;else(gY)[nh[0X1]]=NY[nh[3]];end;end;else if hh>=0x00005 then if hh~=0X6 then(gY)[nh[0X1]]=qY[nh[0X004]];else do(gY)[nh[1]]=gY[nh[0X03]]>gY[nh[0x2]];end;end;else do if hh~=4 then gY[0]=qY[nh[0X4]];nh=pl[sY];sY=sY+0X00001;(gY)[nh[0X1]]=gY[nh[3]][nh[0X00007]];nh=pl[sY];sY=sY+0X00001;local rm=Vl[nh[0X00003]];rm[0X01][rm[2]]=gY[0X0];sY=sY+0x0001;repeat local Qe,We=ol,(gY);if not(#Qe>0)then else local Ys=({});do for Hh,Yh in R,Qe do for Yl,wl in R,Yh do if not(wl[1]==We and wl[0X00002]>=0X0)then else local Fj=(wl[2]);if not(not Ys[Fj])then else do Ys[Fj]={We[Fj]};end;end;(wl)[1]=Ys[Fj];wl[0X2]=0X1;end;end;end;end;end;until true;return;else(gY)[nh[1]]={T({},0X1,nh[3])};end;end;end;end;end;end;end;end;end);if not(AY)then if f(GY)~="string"then d(GY,0X0);else if C(GY,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if C(GY,"^.-:%d+: ")then(d)("Luraph Script:"..(Tl[sY-0X0001]or"\(\i\110\116\e\114nal\041")..": "..x(GY),0x00000);else d(GY,0);end;end;end;else if GY then if KY~=0X001 then return gY[zY](T(gY,zY+1,XY));else return gY[zY]();end;elseif zY then do return T(gY,zY,KY);end;end;end;end;end;end;end;end;(E)(rl,jl);return rl;end;local function oL()local kd,Cd,Nd,Ud,qd=nil,nil,nil,nil,nil;local Pd=4;while Pd~=8 do do if Pd<=3 then if Pd<=0X1 then do if Pd==0 then for D6=0,qd-1 do(Ud)[D6]=oL();end;Pd=0x8;else Ud=Cd[0X007];Pd=6;end;end;else if Pd==0X2 then Cd={gL,gL,gL,{},gL,nil,{},gL,{}};Pd=0X005;else kd={};Pd=0X00002;continue;end;end;else do if not(Pd<=0X0005)then if Pd~=0X006 then do Cd[18]=j();end;Pd=1;else qd=j()-47392;Pd=0;end;else if Pd~=4 then do Nd={};end;Pd=0X7;else Pd=3;continue;end;end;end;end;end;end;Pd=0;do while Pd~=2 do do if Pd==0 then(Cd)[3]=l();Pd=1;else(Cd)[0x2]=l();Pd=0x00002;end;end;end;end;do Cd[0X5]=l();end;local hd={};do Pd=0X00003;end;local Ad,Id,od,Md,yd=nil,nil,nil,nil,nil;while Pd~=0X6 do if not(Pd<=2)then if Pd<=0X0003 then do Ad=j();end;Pd=0;do continue;end;else if Pd~=0x4 then do yd=A()~=0;end;Pd=0X6;else od=j()-22334;Pd=2;continue;end;end;else if Pd<=0X0 then for OV=0X00001,Ad do local IV,UV,qV=nil,nil,(nil);do for KV=0,3 do if KV<=1 then if KV~=0x0 then do UV=j();end;else IV=j();end;else if KV==0X2 then qV=j();else for xu=IV,UV do do Cd[9][xu]=qV;end;end;do continue;end;end;end;end;end;end;do Pd=1;end;continue;else if Pd~=1 then Md=A();Pd=0X00005;continue;else do Id=0X001;end;Pd=0X4;do continue;end;end;end;end;end;for yz=0X1,od do local pz=(A());local qz=nil;for FS=0X0,0X0001 do if FS~=0x000 then(kd)[yz-1]=Id;else qz=nil;continue;end;end;do if pz==127 then do qz=o(PL(Md),B()+j());end;elseif pz==0X6d then do qz=B();end;elseif pz==39 then qz=L();elseif pz==103 then qz=o(PL(Md),0XD);elseif pz==0X091 then qz=B();elseif pz==YL then qz=o(PL(Md),0x3);elseif pz==198 then qz=false;elseif pz==0X43 then qz=JL;elseif pz==253 then qz=o(PL(Md),0XD);else if pz~=135 then else do qz=o(PL(Md),B()+j());end;end;end;end;local wz,sz={qz,{}},0;repeat if not(sz<=0)then do if sz~=1 then Id=Id+1;sz=0X01;else if yd then do for EB=0x0,0X1 do if EB~=0X00 then fL=fL+0X1;continue;else cL[fL]=wz;do continue;end;end;end;end;end;break;end;end;else hd[Id]=wz;sz=0X002;continue;end;until false;end;Cd[iL]=Nd;for Dd=0X1,l()do do(Nd)[Dd]={A(),l()};end;end;(Cd)[uL]=j();local ed=(nil);for Ge=0,2 do if not(Ge<=0x00000)then do if Ge==0X1 then(Cd)[6]=u(ed,1,1)~=0X0;else do Cd[1]=u(ed,2,1)~=0X000;end;end;end;else ed=A();do continue;end;end;end;local Vd=j()-0X29E8;local cd=(Cd[0X4]);for Fq=1,Vd do cd[Fq]={[0X2]=0X00061dAc808,[1]=0.09452679056396607,[0x6]=true,[0X4]=LL,[7]=A(),[0X00002]=O(),[0X5]=true,[BL]=O(),[0X5]=A(),[1]=O(),[4]=A(),[0X00006]=l()};end;Pd=3;while true do if Pd<=0X1 then if Pd==0X0 then(Cd)[12]=A();Pd=2;else do(Cd)[17]=A();end;Pd=4;do continue;end;end;else if not(Pd<=0X0002)then if Pd==0X3 then for nG=1,Vd do local ZG=(Cd[0X4][nG]);for ti,wi in tL(H)do local Si=(1);local Zi,Ei=nil,nil;repeat if not(Si<=0X000)then if Si~=1 then if Ei==10 then local HU=kd[ZG[wi]];local RU=(hd[HU]);if RU then local Xb=nil;local Sb=0X1;while Sb<0x2 do if Sb~=0 then ZG[Zi]=RU[0x01];Sb=0X0;do continue;end;else Xb=RU[2];Sb=0x0002;do continue;end;end;end;(Xb)[#Xb+1]={ZG,Zi};end;else if Ei~=0X1 then else do ZG[wi]=nG+ZG[wi]+1;end;end;end;Si=3;continue;else do Zi=W[wi];end;Si=0X0;continue;end;else Ei=ZG[Zi];do Si=0x002;end;end;until Si==3;end;end;Pd=1;else Cd[14]=A();Pd=0X0;end;else return Cd;end;end;end;end;yL=1;local FL=nil;repeat do if yL~=0 then FL=oL();yL=0X0;else(xL)[2]=cL;yL=2;continue;end;end;until yL>=0X2;do yL=0x1;end;repeat if yL~=0X0 then do cL=nil;end;yL=0;else do return dL(nil,Q,FL)(...);end;end;until false;end)(4294967296,1,bit32.bxor,string.unpack,"<\I\052",ipairs,tostring,rawget,3,0X0008,bit32.rshift,string,coroutine.wrap,0X1f3d,125,false,type,"<i8",table,232,string.gsub,"LPH}nil,bit32.bor,string.rep,string.byte,0X12,0X00034,true,next,coroutine,error,{0x3F49,1589113324,0x2BD189F8,3597476979,0X000073528113,0X00006049387B,3773854941,1179046844,584156132},...);
